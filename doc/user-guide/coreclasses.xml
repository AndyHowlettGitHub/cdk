<chapter>
  <title>Data Classes</title>
  <section>
    <title>Programmers Reference</title>	
    <section> 
      <title>The Data Classes</title>
      <para>The data classes are located in the top level hierarchy of the CDK,
        which is org.openscience.cdk. A chemist will find many of his/her well
        known concepts implemented as classes in the CDK:
        <itemizedlist>
          <listitem><para>&Element;</para></listitem>
          <listitem><para>&Isotope;</para></listitem>
          <listitem><para>&Atom;</para></listitem>
          <listitem><para>&Bond;</para></listitem>
          <listitem><para>&Molecule;</para></listitem>
          <listitem><para>&Ring;</para></listitem>
          <listitem><para>etc</para></listitem>
        </itemizedlist>
      </para>
      <para>
        A molecule is build by creating an instance of the Molecule.class and the
        successively adding instances of &Atom;.class and &Bond;.class to the Molecule
        container: 
        <example>
          <title>Creating a Molecule</title>
          <programlisting>
public static Molecule makeAlphaPinene() {
    Molecule mol = new Molecule();
    mol.addAtom(new Atom("C")); 
    mol.addAtom(new Atom("C")); 
    mol.addAtom(new Atom("C")); 
    mol.addAtom(new Atom("C")); 
    mol.addAtom(new Atom("C")); 
    mol.addAtom(new Atom("C")); 
    mol.addAtom(new Atom("C")); 
    mol.addAtom(new Atom("C")); 
    mol.addAtom(new Atom("C"));  
    mol.addAtom(new Atom("C")); 

    mol.addBond(new Bond(mol.getAtomAt(0), mol.getAtomAt(1), 2)); 
    // One way of making a double bond 
    mol.addBond(1, 2, 1); // A much shorter way of adding a bond
    mol.addBond(2, 3, 1); 
    mol.addBond(3, 4, 1); 
    mol.addBond(4, 5, 1); 
    mol.addBond(5, 0, 1); 
    mol.addBond(0, 6, 1); 
    mol.addBond(3, 7, 1); 
    mol.addBond(5, 7, 1); 
    mol.addBond(7, 8, 1); 
    mol.addBond(7, 9, 1); 
    return mol;
}
          </programlisting> 
        </example>
      </para> 
      <para>
        Since there are a number of concepts in chemistry that have
        properties very similar to a molecule, the Molecule is not the actual base
        class that has all the addBond(Bond), addAtom(Atom) and other methods that you
        would probably expect in it. The base class in fact the 
        &AtomContainer; class
        which is then subclassed by classes like Ring, Substructure, etc. Thus, if you
        want to know what a Molecule, a Ring, a Substructure can do, look at the
        JavaDoc documentation of the AtomContainer class first and then at the
        specialized methods of each of these classes.
      </para> 
      <para>
        The base class of Bond is &ElectronContainer; because a Bond shares
        some properties with an atomic or molecular orbital, most importantly a
        particular number of electrons contained by the entity in question.
      </para> 
      <para>
        Ensembles of Molecules, like those involved in a chemical reaction,
        can be organized in a &SetOfMolecules; class.
      </para>
      <para>
        Due to the dedication of the Model/View/Controller paradigm, the
        programmer will find a &ChemModel;, which can store all of the above concepts. It
        is supposed to represent a particular state of the program at a given point in
        time. A sequence of ChemModels, representing for example different points in
        time in a molecular dynamics simulation of an ensemble molecules, can be stored
        in a &ChemSequence;. A &ChemFile;, the highest level concept, in our CDK hierarchy,
        can store all of the above concepts.
      </para>
    </section>
  </section>
</chapter>
