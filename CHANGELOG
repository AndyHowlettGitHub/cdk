CHANGELOG $Date$
------------------------------------

Changes in CVS
------------------------------------
New:

Fixes:

API changes:

20040324 Release
------------------------------------
New:
* The CDKPluginManager will only load the plugin with the highest version
* Added IO settings for CMLWriter for the namespace prefix and the Schema
  Instance Location attribute
* A Renderer2D subclass that uses masks for making backgrounds empty
  (closes #889829)
* Added a ZMatrixTools.zmatrixToCartesian() method
* PeriodicTablePanel is now interactive. You can register as a CDKListener and 
  will be notified of users selecting a particular element, which you can then get by 
  psepanel.getSelectedElement().
* Implemented GamessReader
* Added parsing reaction specifications in SMILES
* Added field to Reaction for agents, like catalysts
* Added generation of reaction SMILES
* Added creation of atom-atom mappings in reactions
* The UniversalIsomorphism is a bit more generalized to allow for more flexible
  Atom and Bond matching.

Removed:
* Viewer application. Use JChemPaint (jchempaint.sf.net) or Jmol (jmol.sf.net) instead
* CDK core debug patch (was incomplete and experimental)

Fixes:
* A nasty threading bug in StructureDiagramGenerator has been fixed, preventing 
  users from running multiple instances of SDG in seperate threads (closes # 837827).
* Removed all static methods and, most importantly, a static molecule(!) variable 
  from AtomPlacer, which is likely to have caused the problems with hanging layout threads.
* Fixed calculation of cartesian atomic coordinates from fractional coordinates
  in CrystalGeometry
* Cleaned up import statements
* Fixed writing of MDL mol with PseudoAtom's (closes #890456)
* ZMatrixReader no longer includes generic code (closes #871699)
* CDK only JavaDoc tags now use the format @cdk.X, so that JavaDoc no longer complains
* Fixed IteratingMDLReader: added missing readLine() statement and added missing newlines
  to the buffer send to MDLReader. Also fixed throwing of an exception as the interface
  describes (closes #895973)
* Fixed handling of CML content in RSS channel when no namespace prefix was used
* Fixed handling of CML conventions: don't compare new convention with itself,
  and all convention handlers already subclass CMLCore convention, so don't reset
  to CMLCore convention when CML convention found
* ValencyChecker now throws a CDKException when the checked atom is not known
  (closes JCP #903412) but not for PseudoAtom's
* ChemObject.getID() was "" by default; corrected to null
* Fixed reading of aromatic bonds ('A') from CML (closes #903379)
* Fixed rendering of atom-atom mappings
* Fixed reading of atom-atom mappings from MDL RXN files
* Fixed deleting of single carbon with Controller2d (closes JCP #906910)

API changes:
* Changed SetOfAtomContainers.getAtomContainerMultiplier() to .getMultiplier()
* Renderer2D.getScreenSize() and .getScreenCoordinates() are now protected
* LoggingTool methods now accept Objects and convert them toString internally
* CDKPluginInterface.setPropertyDirectory() was added
* Reaction.getReactants() and .getProducts() now return a SetOfMolecules
* Added setReader(Reader) method to ChemObjectReader so that it can allow instantiating
  a usefull class first by ClassLoader.loadClass().getInstance() and then set the Reader
* Matching of file formats has moved into the available Readers matches() methods
* Added event handling to plugin API to get warned when ChemModel has changed
* IDCreator has completely changed. See new JavaDoc.

20040202 Release
------------------------------------
New:
* Added a JPanel of the periodic table
* Added a reader and writer for Hyperchem HIN files
* Added Ant doc.xml build file for converting documentation to HTML
* MDLRXNReader now accepts ChemFile, so it can be used by FileConvertor
* CMLWriter now outputs namespaced CML2
* Extended DADMLReader to support URI's like dadml://any/CAS-NUMBER?50-00-0

Fixes:
* Fixed layout of aliphatic structures (closes bug #889027)
* cdk-* shell wrapper now accept -X java options (closes #882990)
* Refactored build process (closes #883519)
* Fixed rendering of stereo bonds in rings (closes #884935)
* Fixed parsing of [H]-like thingies (closes #881330, #862930, #809412)
* Also store inversed stereo chemistry in MDL mol files (closes #885512)
* Fixed reading of unit cell angles

API changes:
* Moved a number of Swing based classes to cdk.applications.swing (addresses #847584)
* The distribution of classes among cdk-*.jar has slightly changed due
  to the new build process. Do 'ant compile.init' and look in cdk/src/*.classes
  to see in which jar classes end up.
* Added a getPluginVersion() method to the plugin API
* Moved bond.getLength() to cdk.geometry.GeometryTools (closes #874901)

20040120 Release
------------------------------------
New:
* An interface for iterated reading of data from a file, e.g. a SDF file.
* Added Atom field for fractional coordinates as used in crystal representation
* Added missing SetOfAtomContainer class
* Added a limitations task to build.xml to show known limitations of implemented
  algorithms (closes #825454)
* The Controller2D now maintains an active draw element. Changing the element of
  an existing atom using the SYMBOL mode, also changes the draw element.
* Added a SingleElectron class to be able to represent radicals
* Added method for id-ing SetOfAtomContainers, Reaction and SetOfReactions
* Added trigger to auto update of number of implicit hydrogens 
  (implements JCP RFE #813152)
* Added a loadPlugin(String pluginClassName) method to the CDKPluginManager
* New methods for detecting file format using an InputStream; Gziped files can
  be analyzed too now.
* Added ValencyCheckerInterface that provides a general API to SaturationChecker
  and the alternative (experimental) ValencyChecker
* HydrogenAdder can use the new alternative (experimental) ValencyChecker
* Added LoggingTool(Object) constructor, which allows new LoggingTool(this)
* Applied lazyCreation patch to source code, it's no longer an optional patch

Fixes:
* Added missing get() methods to cdk.applications.plugin.EditBus interface
* Added use of LoggingTool in a few classes (closes #827341 and #826991)
* Removed use of 1.4 only Exception.getStackTrace() in LoggingTool
* Fixed remaining JavaDoc errors (except warnings about missing Java3D)
  (closes #820499)
* JavaDoc now uses @depends for runtime dependencies and @builddepends for
  compile dependencies for jar libraries (closes #814294)
* Added missing toString() methods to SetOfMolecules and SetOfReactions
* Fixed coordinate system of Renderer2D (partly fixes #834515)
* Deal with charges and H is special case (closes JCP bug #850143)
* Fixed writing of SDF files (closes #870911)
* Made all CDKConstants  really constant (i.e. final)
* Fixed method: make sure to overwrite old value if number of missing Hs is zero
* Don't try to validate pseudo atoms (closes JCP bug #829038)
* Fixed parsing of [H+] SMILES string (closes #873783)
* AtomTypeFactory no longer tries to configuer PseudoAtom's (which it can't)
* No longer ignores setting when outputing XML decleration in CMLWriter

API changes:
* SetOfMolecules now extends SetOfAtomContainers which gives it additional
  methods like addAtomContainer().
* Renamed color property to have the org.openscience.cdk prefix
* The coordinate system of Renderer2D has been fixed
* Renderer2DModel.getBackgroundDimension() now returns the active dimensions
* Added a getFormatName() method to the ChemObjectIO interface
* Moved formal charge from Atom to AtomType (implements RFC #25)
* Remove ChemObject.init() method, should be done in constructor

20031017 Release
------------------------------------
New:
* IUPAC Name parser added, thanks to University of Manchester (Req. ANT >= 1.6alpha)
* Added a method AtomContainer.removeAllBonds()
* A rebond() method in cdk.graph.rebond that calculates bond from 3D coordinates
* Added missing getInstance(InputStream) method (fixes #810511)
* Implemented the --rebondFrom3DCoordiantes and --addHydrogens options for
  applications.FileCovertor
* Added IOWriter that generates CDK source code
* Added new, alternative method to saturate a molecule by adjusting bond orders
* Implemented a basic MDL v3000 MOL and RXN file reader
* Added a basic CIF and mmCIF reader
* Added benzene ring adding feature to the Controller2D
* Made aromaticity perception in Renderer2D optional
* Added rendering of aromatic rings with a circle inside the ring
  (implements #815261)

Fixes:
* Removed use of JSX
* Added missing switch for display of implicit hydrogens in Renderer2D
* Fixed reading of OpenBabel CML1/2 output
* Now compiles with GCJ 3.3.1 (closes #807833)
* Fixed resolving of URI http://www.xml-cml.org/dtd/cml_1_0_1.dtd (closes #809134)
* Fixed calculation of missing hydrogens for hydrogen itself (closes #813146)
* Fixed SaturationChecker.saturate() code by taking into account all known atom 
  types (closes #815810)
* No longer uses Log4J config by default in library, applications can force 
  configuration by doing new LoggingTool(classNameString, true) (closes #816643)
* Fixed serious problem in reading isotope and charge info from atom block in 
  MDL files
* Fixed coloring problem of implicit hydrogens and charges in Renderer2D 
  (closes #815202)
* Fixed clearing background in Renderer2D (closes #815265)
* Defaulted XML parser to JAXP that comes with Sun JVM 1.4 (closes #814297)

API changes:
* Added getIOSettings() to ChemObject[Reader|Writer]
* Added ChemObjectIO and ChemObjectIOListener interfaces
  to simplify IO API
* Renamed [s|g]etAtomicMass to [s|g]etMassNumber (fixes #721117) and moved it
  from Element into Isotope
* Removed physical props and remarks from ChemObject (implements RFC #20)
* Cleaned up API for AtomTypeFactory: getAtomType() can only apply to the current
  AtomTypeFactory (each atom type list has a different ATF)
* Removed deprecated methods from SaturationChecker
* Removed the old io.ChemLoader class (use ReaderFactory instead)
* Renamed AtomType.get/setMaxBondOrderSum() to .get/setBondOrderSum()
  (closes #823943)

20030909 Release
------------------------------------
New:
* Coloring of atom symbols in 2D display by atom type.
* A cdk-validator program
* More complete validation of chemical semantics in the
  org.openscience.cdk.validation package.
* Added Swing implementation of Reader/WriterListener
* Rewrote Renderer2D.paintAtomSymbol() which will now draw
  isotope info, e.g. 13C, and properly align implicit
  hydrogens, e.g. H3C-
* Stoichiometry and direction concepts added to Reaction
* Added a reverse() Reaction method to ReactionManipulator
* A class for generating 2D coordinates for new hydrogen
  atoms
* SmilesParser now understands '*' indication unknown elements
* Debug CDK core classes that can help when developing CDK
  based applications (dist-core-debug task in build.xml)
* Added cdk-experimental package with an experimental IUPAC
  name generator
* MDL MOL/SDF reader now parses the 'G  ' lines in the property
  blocks
* An ChemObject[Reader|Writer].accepts(ChemObject) method
* A ChemObject removeProperty() method
* A cdk.validate.ProblemMarker which can 'tag' ChemObject's with
  problems
* The Renderer2D will now underline Atom's with validation problems
  with a red line
* Added Association class, extended by the new HydrogenBond class
  (implements RFC #22)
* Added SetOfMolecules.add(SetOfMolecules) method
* Added SetOfMolecules getAllMolecules() convenience methods to
  SetOfReactionsManipulator ReactionManipulator
* Added 2D rendering of atom-atom mapping in reactions
* MDL reader now read atom-atom mapping from RXN files
* Added MFAnalyser.getHTMLMFString() that outputs HTML
  (thanx to Stephen Tomkinson)
* Added a Mol2 reader
* Partly ported the Gaussian03 from Jmol to CDK
* The structure layout generator can now use templates (fixes #590227)

Fixes:
* An angle error in the StructureDiagramGenerator has been
  corrected. This fixes bug #792467 "Rings needlessly overlap"
* An error in AtomPlacer.getLongestUnplacedChain has been corrected.
  This fixes Bug #736137 "small problem in layout managers"
* Added missing LGPL license to distributions.
* Fixed bugs in ChemSequence.getChemModels() and
  ChemFile.getChemSequences()
* JCPControllor nows reconfigures atom after changing symbol
* 2D coordinate generation for molecules with only
  one atom (fixed #780545)
* Added missing PseudoAtom.getLabel() method
* Renderer2D should display PseudoAtom's label instead of symbol
* Proper rendering PseudoAtom labels
* Fixed the 'organic subset' idea, and requirement for []'s
  (fixed #784433)
* Fixed reading of dictionaries, and added dictionaries to jar
* The ReaderFactory can now again return ChemObjectReaders (much
  thanx to Miguel!)
* Fixed aromaticity detection
* Fixes in the SMILES generator (fixes #791091)
* CMLReader is now much more CML2 compliant
* Removed use of tokenizers in MDLReader (fixes #719663)
* Fixed display of atom numbers in Renderer2D (fixes #792466)

API changes:
* ConnectivityChecker.partitionIntoMolecules() now returns a 
  SetOfMolecules instead of a Vector.
* AtomTypeFactory is now a singleton class, see getInstance()
* Added patch to remove get/setPhysicalProperty and 
  get/setRemark (implements RFC #20)

20030702 Release
------------------------------------
New:
* Method to determine if two atoms should be bonded (cdk.geometry.BondTools)
* Added a method debug(Exception) to LoggingTool
* The SMILES parser now reads formal charges and mass numbers
* ReaderFactory now recognizes all files that Jmol recognizes
* Methods for getting subgraph/isomorphism atom mapping
* Added a getConnectedBondsVector() method to AtomContainer
* Added guessFileFormat application, using the new ReaderFactory
* Added hierarchical compare() methods for core classes
* Added hook for progress reports on, and hooks for user configurability of 
  file reading
* More jUnit tests
* Added MFAnalyser.removeHydrogens()

Changes:
* Core classes now use super.compare() upto ChemObject
* CMLReader can now use J2SE 1.4 JAXP XML reader
* FileConvertor now takes multiple files as input and dynamically
  recognizes format (implements feature #707425)
* Added parsing of xy2 and xyz3 CML atom attributes
* FileConvertor can take a Java property file for IOSetting question
  answering automization
* Added HydrogrenAdder class.

Changes:
* CML output now by defaults uses CML ids for atoms and bonds
  
Fixes:
* Fixed reading/writing of isotopes from/to MDL molfiles
* Fixed toString() of AtomType.
* Fixed bug in AtomContainer constructor
* Some compatibility issues with Java1.1 (for applet usage)
* Fixed Bond.getAtoms
* Fixed Bond.toString
* Fixed (and added) .compare methods for several core classes
* Fixed bug #746067
* Fixed aromaticity flagging of bonds in SmilesParser
* Fixed possible memory overflow in RandomStructureGenerator
* Fixed bug in Crystal.getP1() method
* Fixed Bond.toString() and Bond.getAtoms
* Fixed a number of bugs in SmilesGenerator
* Fixed CMLResolver to use EntityResolver
* Fixed reading of atomic coordinate for CML when some coordinate
  are not given (closes #754811)
* Fixed detection of MDL molfiles
* Fixed reading of lists of CML molecules
* Cleaned up Javadoc
* Used YYYY-MM-DD standard for class creation date

API changes:
* ChemObject now has protected flags/pointers (implements RFC #13)
* FileConvertor command line API changed considerable (see --help)
* The hydrogen adding methods in SaturationChecker are now deprecated
  (and replaced by cdk.tools.HydrogrenAdder).

20030412 Release
------------------------------------
New:
* Added move operation to JCPController2D
* Added ReaderFactory that guesses the file format based
  on the contents of the file (from the Jmol project)
* XYZWriter (from the Jmol project)
* MDLReader now also reads CHG and ISO fields in the
  property block
* Basic CMLReaction reading has been added
* Controller2D now supports context dependent popup menu's
  for atoms and bonds
* Added a RFC #8 non-compliant PseudoAtom class 
* Added editor table for dictionary references in ChemObject's
* Added ChemObject.getProperties() method
* CMLReader reads dictRef for the atom and bond elements
* Core CDK classes are now serializable
* Added Manipulator classes that relay methods to 'lower' classes
* Added classes for chemical semantic validation
* CMLReader/-Writer now does isotopic information

Changes:
* Added one-click (not-patented ;) deselect of atoms in lasso mode
* Libio for Jmol and JOELib is now conditionally build
* Java3D depending classes are now conditionally build

Fixes:
* Fixed reading of AtomType's with JSX
* Fixed zooming of atomic charges in Renderer2D
* Fixed lassoing of atoms in Renderer2D
* New spiro rings are now using the bond length specified in
  the renderer model
* Removed obsolote cdk-cml module and tasks
* MDLWriter now writes numbers with Locale.ENGLISH
  (fixes #692410)
* Fixed bug in Reaction.growProductArray()
* Better layout of ChemObjectTree
* Fixed reading of isotope information (closes #714010)
* Several fixes in MDLReader/-Writer (thanx to Juergen)

API changes:
* Implemented RFC #11
* Removed ChemModel.getAtomContainer (see ChemModelManipulator)
* Returned bond order sum is now double (fixes #686451)
* Method AtomContainer.getHighestCurrentBondOrder() renamed to
  getMaximumBondOrder() (fixes #710695)

20030217 Release
------------------------------------
New:
* Added Reaction and SetOfReactions to CDK's core classes
* Zoom functionality for the Renderer2D (including in editing mode)
* Added method in GeometryTools to center a molecule around a point

Changes:
* Renamed io.cml.Convention to io.cml.CMLCoreModule

Fixes:
* Rendering of Atom Labels in 2D
* Fixed build process from sourcedist generated with Ant buildfile
* Removed classes in cdk-extra module that belong elsewhere

API changes:
none

20030213 Release
------------------------------------
New:
* A Crystal convertor to Jmol v5 is added.
* StructureDiagramGenerator now uses LoggingTool.
* It is now possible to say if the double bond
  configurations should be evaluated for every
  single double bond in the SmilesGenerator.
* The Atom class has now a container field for its
  formal charge. (RFC #6)
* Added getCentreOfMass methods (2D and 3D)
* Added geometrical methods for crystals
* Different build procedure to allow for patches
* Added a color scheme for atoms based on the partial
  atomic charge
* A LonePair class is implemented (RFC #5)
* More JUnit Tests.
* Added rendering of wedge bonds (up/down) in Renderer2D
* Added ChemObjectTree for for showing the content of a
  ChemObject as a tree, see cdk-view
* Added 2D rendering and editing of formal charges
* Added AtomType configuration from Jmol
* Added a SMILES reader
* The AtomType class now has fields for Covalent and
  Vanderwaals radii (RFC #10)

Changes:
* CMLWriter now outputs CML2 instead of CML1

Fixes:
* HOSECodeGenerator now generates correctly ranked n-sphere codes.
* Reading of 3D coordinates from ShelX files
* Fixed "M  END" line in MDL output (fixes bug #624656)
* Fixed conversion of coordinates in libio/joelib/Convertor
  (thanks to Joerg for patch)
* Fixed reading of multifragment IChI tautomers
  (fixed bug #642429)
* Added reading of bond orders S,D,T,A in CML
  (bug #639455)
* Added natural occuring isotopes with atomic numbers
  above 60 (fixes #642426 and #609834)
* Tar package can now be build on Woody 3.0 (with docbook stylesheets
  1.40)
* Fix for SetOfMolecule.getMolecules(). The array length is now
  equals to the number of molecules in the set.
* Rewrote AtomTypeFactory to not require JSX in special cases

API changes:
* Two getBondNumber() methods are added to AtomContainer.
* The method tools.SaturationChecker.saturateWithHydrogen() got
  renamed to addHydrogensToSatisfyValency() (thanks to Peter)
* Major changes in the AtomContainer API (see RFC #5)
* Added constructor Bond(Atom, Atom)
* Added method AtomTypeFactory.configure(Atom)

20021012 Release
------------------------------------
New:
* Added the long awaited UniversalIsomophismTester.
  This class provides methods for Isomophism-, Subgraph-
  isomorphism- and Maximum Common Subgraph Isomorphism
  testing.
* Added MFAnalyser.getElementCount()
* Added SaturationChecker.saturateWithHydrogen(Molecule)
* Added cdk.math.MinMax class (methods formerly in
  cdk.structgen.stoichastic.ConvertTools)
* Added a IChI reader
* Added a class for constant physical property values
* Added a SVG output filter
* cdk-view now views IChI files
* cdk-fileconvert can generate SVG

Fixes:
* IsotopeFactory does now return Isotopes with
  correctly initialized flags and pointers.
* flags[] array is now correctly cloned and copied
  inside the ChemObject.clone() method.
  (fixes bug #617120)
* JCPController2D now edits a bond order when in
  bond mode
* Removed NoSuchAtomException's from core classes
  (see RFC #4, fixes bugs #590570 and #590576)
* Lots of updated JavaDoc's (checked with Sun's DocCheck doclet)
* Fixed bug in reading SDF files with patch by Chris Pudney
  (fixes bug #619183).
* Fixed CMLWriter to not produce invalid CML code, and patched
  CMLReader to be able to read older CMLReader output
  (fixes bug #620121).
* Fixed bond order problem in ChemFileCDO (fixes bug #620229)
* Fixed reading of aromatic bond from MDL molfiles
  (fixes bug #620731, thanks to Hans Vanderzijl for patch
  suggestion)

API changes:
* Removed obsolete cdk.structgen.stoichastic.ConvertTools
  (see AtomContainer and MinMax for same functionality)
* Removed redundant constructor Molecule(Molecule)
* Removed redundant method Monomer.addAtom(Atom)
* Moved generateElementFormula(Molecule, String[]) from
  SwissArmyKnife to MFAnalyser
* Moved package graphinvariant to package graph.invariant
* Moved AromaticityCalculator from package smiles to aromaticity
* Moved CanonicalLabeler from package smiles to graph.invariant
* Moved PathTools from package tools to graph
* Removed old hard coded property get and set methods from Molecule.
* Changed order parameter of two AtomContainer.addBond() methods
  from int to double signature (fixes bug #620241)

20020920 Release
------------------------------------
New:
* Added a class for representing crystals
* Added a class for reading PolyMorph Predictor (r)
  *.pmp files
* Added a class for reading ShelX files
* The SMILES generator now also supports chirality
* cdk-fileconvert supports one-to-many conversion
  (e.g. PMP contains many crystals, while ShelX
   can contain only one crystal. Thus, when converting
   PMP to ShelX more than one file is created.)
* Added a method MFAnalyser.getElement() which returns
  a Vector with asorted element names
* Added a Comparator that can sort element names
  according to: C,H, then others (alphabetically)
* More references in documentation.
* Added more documentation (keywords, examples).
* Test classes are now in cdk-test.jar

Fixes:
* Added initialization of atoms Array in Bond.java
  constructor
* Fixed parsing of ChemDraw created SMILES (#593648)
* Removed non-informative template JavaDoc

API changes:
* cdk.libio.jmol.Convertor now converts
  AtomContainer from/to ChemFrame, instead of
  Molecule from/to ChemFrame
* FortranFormat moved to org.openscience.cdk.math
* GeomertryTools.hasXDCoordinates() now accepts
  AtomContainer instead of Molecule
* ChemObjectWriters must now also implement the
  method highestSupportedChemObject()

20020902 Release
------------------------------------
Fixes:
* Added missing Log4J jar's to distribution

20020831 Release
------------------------------------
New:
* Added Fragment class (fixes wishlist #591476)
* Added cdk-download program (fixes wishlist #595031)
* Added -t option to cdk-test for textual JUnit output
* Added convertor procedures for CDK from/to jmol.Atom,
  jmol.ChemFrame
* Added support for using Jmol as 3D viewer in cdk-view

Fixes:
* More JavaDoc documentation
* Fixed bug in cdk-view (#588043)
* Fixes in MDLReader and FileConvertor (fixes bugs
  #599536 and #599539)

API changes:
* Moved more test classes to subpackages of cdk.test
* Merged IsotopeFactory and ElementFactory
* Made IsotopeFactory a singleton class
* Added int[][] AtomContainer.getAdjacencyMatrix() method
* CDKConstants is now a class and no longer an interface

20020805 Release
------------------------------------
* Added --no3D option to cdk.applications.Viewer
* Do not fail if bond order != integer, assume order=1
* Classes are now separated into two jar files: cdk-core and cdk-extra.
* Several yet unnamed bugfixes
* Added convertor procedures for CDK from/to JOEAtom, JOEBond, JOEMol
* Fixed output of bond orders in CML (closes bug #582823)
* Added viewing of SMILES string to cdk-view (closes bug #564839)
* Removed dependency on non-core classes in ChemModel (closes bug #584905)

20020518 Release
------------------------------------
* added reading of partial charges from CML files
* fixed bug if HOSECodeGenerator
* added detection of bond order if not given in file
* added SMILES parser (ported from JChemPaint)

20020419 Release
------------------------------------
* uploaded CML 1.0.1 DTD and Schema
* fixed writing of single molecule to MDL molfile format
  (closes bug #526612)
* added fingerprinting class for molecules
* debugging is set off by default
* added several JUnit tests for CML reading library
* added SMILES generator

20020206 Release
------------------------------------
* added Viewer application that detects 3D/2D (cdk-view executable)
* added dumpSystemProperties() to LoggerTool
  (lists OS version/arch and Java version/vendor)
* adding Rendered3D which does not use Java3D (not yet operational)
* fixed Atom.point2D == null problem
* fixed reading of CML files with DTD for Aelfred2
  (closes bug #493605)

20020101.1 Release
------------------------------------
* fixes non-working cdk-fileconvert
* added manual pages

20020101 Release
------------------------------------
* fixed some javadoc issues
* added Aelfred2 SAX2 parser
* added FileConvertor application
* added constructors that take Writer/Reader for several IO classes
* added DADML reader, to read structures from internet
* seperated indices from CML content in database
* rewrite of database access: split of CML content and indices

Preview 20011201
------------------------------------
* splitted libraries from CDK source code
* fixed reading of CML output of XDrawChem

Preview 20011013
------------------------------------
* More classes make use of new LoggingTool

Preview 20011015
------------------------------------
* Improvements to SingleRandomStructureGenerator
* Added Log4J as (optional) logging tool
* Fixed a problem in PathTools.breadthFirstTargetSearch()
* Added to convenience methods to XMLTools for serializing and de-serializing

Preview 20010909
------------------------------------
* Added TestCases for PDBReader, Monomer, Polymer and ChemObject.
* Added get/setProperty and get/setRemark to ChemObject.
* Added classes for rendering graphes
* Added classes for complex numbers, vectors and matrices
* Change name from Job to ClosedShellJob
* Added Factories for AtomType, Element and Isotope as well as their testcases.

Preview 20010807
------------------------------------
* Added AtomicTable.java: a list of atomic properties.
* Added Atom.charge (private)
* Added XYZReader.java
* Added has2DCoordinates() and has3DCoordinates() to Geometry.class
* Added MoleculesTable.java: a list of molecules
* CDK adopted the Java CML Filter Library
* Added a PDBReader
* Added BioPolymer/Polymer and Monomer classes
* vecmath library updated to 1.14

Preview 20010511
------------------------------------
* Added base classes (Atom, Bond, etc)
* Added file i/o (CML, MDL Molfile)
* Added JDBC import/export filter (experimental)
* Added RandomStructure Generator
* Added Renderer2D
