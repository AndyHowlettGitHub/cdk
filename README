CDK The Chemical Development Kit

Copyright 1997-2004 The CDK Development Team
License: LGPL, see doc/lgpl.license

1. Introduction

You are currently reading the README file for the Chemistry Development Project (CDK).
This project is hosted under http://cdk.sourceforge.net
Please refer to these pages for updated information and the latest version of the CDK.

The CDK is an open-source library of algorithms for structural chemo- and bioinformatics, implemented in 
the programming language Java(tm). The library is published under terms of the the 
GNU Lesser General Public License. This has implications on what you can do with sources and
binaries of the CDK library. For details, please refer to the file LICENSE, which should have been
provided with this distribution.

PLEASE NOTE: This is a library of useful data structures and algorithms to manipulated them 
from the area of structural chemo- and bioinformatics. As such, it is intended for the use by
programmers, who wish to save some effort by reusing code. It is not intended for the enduser. 
If you consider yourself to be more like user, you might not find what you wanted. 
Please refer to other projects like the JChemPaint project (http://jchempaint.sourceforge.net)
or the Jmol project (http://jmol.sourceforge.net) for programs that actually take advantage of the 
CDK library.

2. Compiling

Compiling and jar-ing the software is done with Jakarta's 
Ant (http://jakarta.apache.org/ant/):

cdk/$ ls build.xml
build.xml
cdk/$ ant

2.1 Applying patches

A list of available patches is given by the command

cdk/$ ant info

In brackets the names of the patches are given. To apply a patch when compiling, type:

cdk/$ ant -Ddo.lazy.creation=yes clean dist-all

3. Running tests

After you compiled the code, you can do "ant test" to run the test suite of non-interactive, automated
tests. You might need to copy an appropriate junit.jar into your $ANT_HOME/lib
directory or somewhere else in your classpath.
Upon "ant test", you should see something like:

test:
Running org.openscience.cdk.test.CDKTests
Tests run: 1065, Failures: 7, Errors: 1, Time elapsed: 27,55 sec

As you can see, the vast majority of tests ran successfully, but that there
are failures and errors. The $CDK_HOME/reports/results.txt file contains
information about the outcome of the tests. Some tests might fail intentionally
to mark know issues in CDK.

There are also run interactive tests, like the Controller2DTest. In order to try them, you can edit the "run"
target in the build.xml file to look like this:

	<target name="run" depends="dist">
		<java classname="org.openscience.cdk.test.ControllerTest" fork="yes">
			<arg value=""/>
			<classpath>
				<pathelement location="${dist}/jar/cdk.jar"/>
				<pathelement path="${java.class.path}"/>
				<pathelement location="."/>
				<fileset dir="jar">
				<include name="*.jar"/>
				</fileset>
			</classpath>
		</java>  
	</target>

Then, a "ant run" should give you a window where you can add bonds to a given structure.
Currently, there are about 1000 test, of which a large part tests the core classes.

4. Using CDK

CDK is a class library intended to be used by other programs. It will not run 
as a stand-alone program, although it contains some GUI- and command
line applications. In order to use the CDK in your program, you need to build
the distribution jars by running "ant dist-all". They will end up in
$CDK_HOME/dist/jar. Copy all cdk-*.jars as well as all jars from $CDK_HOME/jar
to the lib directory of the project for which you intend to have CDK support and
use them as you would use any other third party jar.
