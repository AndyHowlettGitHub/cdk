<project name="CDK" default="dist-all" basedir=".">

        <property file="build.props"/>

        <!-- compile options -->
        <property name="build.sysclasspath" value="ignore" />
        <property name="build.compiler" value="modern" />
        <property name="debug" value="on" />
        <property name="deprecation" value="on" />
        <property name="optimization" value="off" />

        <!-- patches to apply -->

        <!-- where to find Java3D -->
        <property name="pathtojava3d" value="" />
        <property name="pathtojoelib" value="../../JoeLib/joelib/" />


        <!-- directories -->
        <property name="build" value="build" />
        <property name="build.src" value="${build}/src" />
        <property name="sourcedist" value="sourcedist" />
        <property name="dist" value="dist" />
        <property name="doc" value="doc" />
        <property name="src" value="src" />
        <property name="lib" value="jar" />
        <property name="devellib" value="develjar" />
        <property name="src.tests" value="${src}/org/openscience/cdk/test" />
        <property name="reports.tests" value="reports" />
        <property name="appjars.dir" value="${dist}/appjars" />
        <property name="metainf" value="${src}/META-INF" />
 
        <!-- class to run for testing-->
        <property name="testclass" value="CDKTests" />
        <property name="runclass" value="applications.FileConvertor" />
        <property name="arg1" value="" />
        <property name="arg2" value="" />
        <property name="arg3" value="" />
        <property name="arg4" value="" />
        
        <!-- CLASSPATH -->
        <!-- path id="project.class.path">
                <pathelement location="${java.ext.dirs}/rt.jar" />

                <fileset dir="${lib}">
                        <include name="batik-awt-util.jar" />
                        <include name="batik-dom.jar" />
                        <include name="batik-svggen.jar" />
                        <include name="batik-util.jar" />
                        <include name="batik-xml.jar" />
                        <include name="baysmith-io.jar" />
                        <include name="bcel-5.1.jar" />
                        <include name="dadml.jar" />
                        <include name="gnujaxp.jar" />
                        <include name="hansel-1.02.jar" />
                        <include name="junit.jar" />
                        <include name="log4j.jar" />
                        <include name="mysql-2.0.4.jar" />
                        <include name="postgresql7.0-1.2.jar" />
                        <include name="printf.jar" />
                        <include name="vecmath1.2-1.14.jar" />
                        <include name="xindice.jar" />
                        <include name="xmldb.jar" />
                        <include name="stmml.jar" />
                        <include name="castor-0.9.5-xml.jar" />
                        <include name="cmlAll_1.4.jar" />
                        <include name="base_1.4.jar" />
                        <include name="euclid_1.4.jar" />
                        <include name="pmrdom_1.4.jar" />
                        <include name="jmolApis.jar" />
                        <include name="jmolIO.jar" />
                        <include name="commons-cli-1.0.jar" />
                        <include name="jfontchooser.jar" />
                        <include name="jgrapht-0.5.3.jar" />
                        <include name="Jama-1.0.1.jar" />

                        <include name="antlr.jar" />
                        <include name="sjava-0.68.jar" />
                        <include name="jas.jar" />
                </fileset>
                <fileset dir="${pathtojava3d}">
                        <include name="*.jar" />
                </fileset>
        </path -->

        <target id="info" name="info" depends="check"> 
            <!-- Gives information about the building process. -->
            <echo message="Platform:" />
            <echo message="             OS: ${os.name}" />
            <echo message="   Architecture: ${os.arch}" />
            <echo message="        Version: ${os.version}" />
            <echo message=" Mac OS/X found: ${isMacOsX}" />
            <echo message="" />
            <echo message="Java/Ant Environment:" />
            <echo message="   Java version: ${java.version}" />
            <echo message="    Java vendor: ${java.vendor}" />
            <echo message="       Java dir: ${java.home}" />
            <echo message="   Java ext dir: ${java.ext.dirs}" />
            <echo message="    Ant version: ${ant.version}" />
            <echo message="    ${ANT_HOME}: ${ant.home}" />
            <echo message="       hasAnt16: ${hasAnt16}" />
            <echo message="" />
            <echo message="CDK Environment:" />
            <echo message="    CDK version: ${version}" />
            <echo message="      build.xml: $Id$" />
            <echo message="  Doclets found: ${docletsAreCompiled}" />
            <echo message="   JOELib found: ${joelib.present}" />
            <echo message="   CMLDOM found: ${cmllibs.present}" />
            <echo message="   Java3D found: ${java3D.present}" />
            <echo message="    Junit found: ${junit.present}" />
            <echo message="R/SJava present: ${rispresent}"/>
            <echo message="" />
            <echo message="Compiling:" />
            <echo message="            for: ${build.compiler}" />
            <echo message="          debug: ${debug}" />
            <echo message="    deprecation: ${deprecation}" />
            <echo message="   optimization: ${optimization}" />
        </target>

        <target id="checkPlatforms" name="checkPlatforms">
            <condition property="isMacOsX">
                <and>
                    <os family="mac"/>
                    <os family="unix"/>
                </and>
            </condition>
        </target>
        
        <target id="check" name="check" depends="checkPlatforms">
            <!-- Checks which parts of CDK can be build. -->
            <condition property="docletsAreCompiled">
                <and>
                    <available classname="MakeJavaFilesFilesDoclet" classpath="${doc}/javadoc"/>
                    <available classname="MakeCDKSetFilesDoclet" classpath="${doc}/javadoc"/>
                </and>
            </condition>
            <available classname="joelib.molecule.JOEAtom" 
                classpath="${lib}/libio/joelib.jar" 
                property="joelib.present"/>
            <available file="${lib}/cmlAll_1.4.jar" 
                property="cmllibs.present"/>
            <available classname="javax.media.j3d.Canvas3D"
                property="java3D.present"/>
            <available classname="junit.framework.TestCase"
                classpath="${ant.home}/lib/junit.jar"
                property="junit.present"/>
            <condition property="hasAnt16">
                <contains string="${ant.version}" substring="1.6"/>
            </condition>
            <condition property="isJava13">
                <contains string="${java.version}" substring="1.3"/>
            </condition>
            <condition property="isJava14">
                <contains string="${java.version}" substring="1.4"/>
            </condition>
            <condition property="isJava14+">
                <or>
                    <contains string="${java.version}" substring="1.4"/>
                    <contains string="${java.version}" substring="1.5"/>
                </or>
            </condition>
            <condition property="isJava15">
                <contains string="${java.version}" substring="1.5"/>
            </condition>
            <uptodate property="dotjavafiles.uptodate"
                targetfile="${src}/core.javafiles">
                <srcfiles dir="${src}" includes="**/*.java" />
            </uptodate>
            <condition property="dotjjfiles.uptodate">
                <and>
                    <uptodate property="NomParserJavafiles.uptodate" 
                        targetfile="${src}/org/openscience/cdk/iupac/parser/NomParser.java">
                        <srcfiles dir="${src}" includes="org/openscience/cdk/iupac/parser/NomParser.jj" />
                    </uptodate>
                    <uptodate property="SMARTSParserJavafiles.uptodate" 
                        targetfile="${src}/org/openscience/cdk/smiles/smarts/SMARTSParser.java">
                        <srcfiles dir="${src}" includes="org/openscience/cdk/smiles/smarts/SMARTSParser.jj" />
                    </uptodate>
                </and>
            </condition>
            <condition property="rispresent">
                <and>
                    <or>
                        <available file="/usr/bin/R" />
                        <available file="/usr/local/bin/R"/>
                    </or>
                    <or>
                        <available file="/usr/lib/R/library/SJava/" />
                        <available file="/usr/local/lib/R/library/SJava/" />
                        <available file="/usr/local/lib/R/site-library/SJava/" />
                    </or>
                </and>
            </condition>
        </target>


        <target id="init" name="init" depends="check, setupBuildDir"/>
        <target id="customize" name="customize" depends="javacc"/>
        
        <target id="setupBuildDir" name="setupBuildDir">
                <tstamp />
                <mkdir dir="${build}" />
                <mkdir dir="${sourcedist}" />
                <mkdir dir="${dist}" />
                <mkdir dir="${reports.tests}" />
        </target>

        <target id="clean" name="clean" description="Removes autogenerated files.">
                <delete>
                    <fileset dir="." includes="**/*~" />
                    <fileset dir="." includes="*.tar.gz" />
                    <fileset dir="." includes="*.zip" />
                    <fileset dir="${src}" includes="*.classes" />
                    <fileset dir="${src}" includes="*.javafiles">
                        <exclude name="jmol*.javafiles" />
                    </fileset>
                    <!-- remove java files generated with JavaCC -->
                    <fileset dir="${src}/org/openscience/cdk/smiles/smarts" includes="*.java" />
                    <fileset dir="${src}/org/openscience/cdk/iupac/parser" includes="*.java">
                        <!-- the next are from CVS -->
                        <exclude name="AttachedGroup.java" />
                        <exclude name="MoleculeBuilder.java" />
                    </fileset>
                </delete>

                <delete dir="${build}" />
                <delete dir="${sourcedist}" />
                <delete dir="${dist}" />
                <delete dir="${reports.tests}" />
        </target>

        <target name="compileDoclet" id="compileDoclet" depends="check" unless="docletsAreCompiled">
             <echo>Compiling doclets in doc/javadoc that are required for compiling CDK...</echo>
             <antcall target="compileDoclet.MacOSX"/>
             <antcall target="compileDoclet.Other" />
        </target>

        <target name="compileDoclet.MacOSX" id="compileDoclet.MacOSX" if="isMacOsX">
            <javac srcdir="doc/javadoc/source" destdir="doc/javadoc"
                   includes="MakeJavaFilesFilesDoclet.java, MakeCDKSetFilesDoclet.java" />
        </target>

        <target name="compileDoclet.Other" id="compileDoclet.Other" unless="isMacOsX">
            <javac srcdir="doc/javadoc/source" destdir="doc/javadoc" 
                   includes="MakeJavaFilesFilesDoclet.java, MakeCDKSetFilesDoclet.java">
                <classpath>
                    <fileset dir="${java.ext.dirs}">
                        <include name="tools.jar" />
                    </fileset>
                    <fileset dir="${java.ext.dirs}/../../../lib">
                        <include name="tools.jar" />
                    </fileset>
                </classpath>
            </javac>
        </target>

        <target name="runDoclet" id="runDoclet" depends="reallyRunDoclet, failIfNoDocletResults"/>

        <target name="checkDocletResults" id="checkDocletResults">
            <condition property="dotjavafiles.uptodate">
                <and>
                    <available file="${src}/data.javafiles" />
                    <available file="${src}/core.javafiles" />
                    <available file="${src}/standard.javafiles" />
                    <available file="${src}/extra.javafiles" />
                    <available file="${src}/io.javafiles" />
                </and>
            </condition>
        </target>

        <target name="failIfNoDocletResults" id="failIfNoDocletResults" depends="checkDocletResults" unless="dotjavafiles.uptodate">
            <fail>
              There seems to be a problem with building the cdk/src/*.javafiles.
              Often this is caused by malformed java source code, so please check the output
              of the reallyRunDoclet target (ant reallyRunDoclet).
              
              If there is no reported source code error, please report this to 
              cdk-devel@lists.sf.net and send the output of
              this command: ant -v info runDoclet.
            </fail>
        </target>
        
        <target name="reallyRunDoclet" id="reallyRunDoclet" depends="compileDoclet" unless="dotjavafiles.uptodate">
            <javadoc private="false" public="true">
                <classpath>
                    <fileset dir="${lib}">
                        <include name="*.jar" />
                    </fileset>
                    <fileset dir="${lib}/libio">
                        <include name="*.jar" />
                    </fileset>
                    <fileset dir="${devellib}">
                        <include name="*.jar" />
                    </fileset>
                </classpath>

                <doclet name="MakeJavaFilesFilesDoclet" path="${doc}/javadoc"/>

                <packageset dir="${src}">
                    <include name="org/openscience/cdk/**"/>
                </packageset>

            </javadoc>
            <javadoc private="false" public="true">
                <classpath>
                    <fileset dir="${lib}">
                        <include name="*.jar" />
                    </fileset>
                    <fileset dir="${lib}/libio">
                        <include name="*.jar" />
                    </fileset>
                    <fileset dir="${devellib}">
                        <include name="*.jar" />
                    </fileset>
                </classpath>

                <doclet name="MakeCDKSetFilesDoclet" path="${doc}/javadoc"/>

                <packageset dir="${src}">
                    <include name="org/openscience/cdk/**"/>
                </packageset>

            </javadoc>
            <move todir="${src}" failonerror="true">
                <fileset dir=".">
                  <include name="*.javafiles"/>
                  <include name="*.classes"/>
                  <include name="*.set"/>
                  <include name="*.entitylist"/>
                </fileset>
            </move>
        </target>
        
        <target name="compile.init" id="compile.init" 
                depends="init, customize, compileDoclet, runDoclet"/>
        
        <target id="compile-module" name="compile-module" depends="compile.init, dist.init">
            <echo message="Compiling classes for CDK's ${module} module." />
            
            <!-- check for availability for meta info files -->
            <available file="${metainf}/${module}.datafiles" property="module.datafiles.present"/>
            <available file="${metainf}/${module}.cdkdepends" property="module.cdkdepends.present"/>
            <available file="${metainf}/${module}.libdepends" property="module.libdepends.present"/>
            <available file="${metainf}/${module}.devellibdepends" property="module.devellibdepends.present"/>
        
            <!-- be somewhat informative -->
            <echo message="Datafiles defined: ${module.datafiles.present}"/>
            <echo message="CDK dependencies defined: ${module.cdkdepends.present}"/>
            <echo message="Library dependencies defined: ${module.libdepends.present}"/>
            <echo message="Developer Library dependencies defined: ${module.devellibdepends.present}"/>
            
            <!-- normally javac compiles not just the given files, but also missing
                 classes that are in the same src/ directory. By making a copy first,
                 we explicitely make it impossible to compile files that are not
                 marked for a specific module -->
            <delete dir="${build.src}"/>
            <mkdir dir="${build.src}"/>
            <copy todir="${build.src}">
                <fileset dir="${src}">
                    <includesfile name="${src}/${module}.javafiles"/>
                </fileset>
            </copy>
            
            <!-- ok, now that we have a copy, compile this copy -->
            <javac srcdir="${build.src}" destdir="${build}" optimize="${optimization}" 
                    debug="${debug}" deprecation="${deprecation}">
                <classpath>
                    <fileset dir="${lib}" >
                        <exclude name="**/*" unless="module.libdepends.present" />
                        <includesfile name="${metainf}/${module}.libdepends" if="module.libdepends.present" />
                    </fileset>
                    <fileset dir="${devellib}">
                        <exclude name="**/*" unless="module.devellibdepends.present" />
                        <includesfile name="${metainf}/${module}.devellibdepends" if="module.devellibdepends.present" />
                    </fileset>
                    <fileset dir="${dist}/jar">
                        <exclude name="**/*" unless="module.cdkdepends.present" />
                        <includesfile name="${metainf}/${module}.cdkdepends" if="module.cdkdepends.present" />
                    </fileset>
                </classpath>
            
                <excludesfile name="${src}/java1.4+.javafiles" if="isJava13"/>
                <excludesfile name="${src}/java1.4.javafiles" unless="isJava14"/>
                <excludesfile name="${src}/ant1.6.javafiles" unless="hasAnt16"/>
                <excludesfile name="${src}/r-project.javafiles" unless="rispresent"/>
            
                <includesfile name="${src}/${module}.javafiles"/>
            </javac>
            
            <!-- and then jar things up into the module jar -->
            <jar jarfile="${dist}/jar/cdk-${module}.jar">
                <fileset dir="${build}">
                    <includesfile name="${src}/${module}.classes" />
                    <excludesfile name="${src}/java1.4+.classes" if="isJava13"/>
                    <excludesfile name="${src}/java1.4.classes" unless="isJava14"/>
                    <excludesfile name="${src}/ant1.6.classes" unless="hasAnt16"/>
               </fileset>
               <fileset dir="${src}">
                    <include name="${module}.javafiles" />
               </fileset>
               <fileset dir="${src}">
                    <exclude name="**/*" />
                    <includesfile name="${metainf}/${module}.datafiles" if="module.datafiles.present" />
               </fileset>
            </jar>
       </target>

        <!-- Convert the JavaCC .jj file to the correct .java files for the IUPAC parser -->
        <target id="javacc" name="javacc" depends="init, check" if="hasAnt16" unless="dotjjfiles.uptodate">
          <echo message="Compiling Ant 1.6 depending classes." />
          <!-- the IUPAC name parser -->
          <delete>
              <fileset id="javacc-generated" 
                dir="${src}/org/openscience/cdk/iupac/parser/" 
                includes="NomParser*.java,ParseException.java,SimpleCharStream.java,Token.java,TokenMgrError.java"/>
          </delete>
          <javacc target="${src}/org/openscience/cdk/iupac/parser/NomParser.jj" 
            outputdirectory="${src}/org/openscience/cdk/iupac/parser/" 
            javacchome="${lib}"/>
          <delete>
              <fileset id="javacc-generated" 
              dir="${src}/org/openscience/cdk/smiles/smarts/" 
              includes="*.java"/>
          </delete>
          <javacc target="${src}/org/openscience/cdk/smiles/smarts/SMARTSParser.jj" 
            outputdirectory="${src}/org/openscience/cdk/smiles/smarts/" 
            javacchome="${lib}"/>
        </target>

        <target id="dist.init" name="dist.init">
            <mkdir dir="${dist}/jar" />
        </target>

        <target id="dist-all" name="dist-all">
            <antcall target="compile-module"><param name="module" value="data"/></antcall>
            <antcall target="compile-module"><param name="module" value="core"/></antcall>
            <antcall target="compile-module"><param name="module" value="interfaces"/></antcall>
            <antcall target="compile-module"><param name="module" value="standard"/></antcall>
            <antcall target="compile-module"><param name="module" value="render"/></antcall>
            <antcall target="compile-module"><param name="module" value="io"/></antcall>
            <antcall target="compile-module"><param name="module" value="io-jmol"/></antcall>
            <antcall target="compile-module"><param name="module" value="extra"/></antcall>
            <antcall target="compile-module"><param name="module" value="libio-cml"/></antcall>
            <antcall target="compile-module"><param name="module" value="experimental"/></antcall>
            <antcall target="compile-module"><param name="module" value="swing"/></antcall>
        </target>

        <target id="dist-apps" name="dist-apps">
            <antcall target="compile-module"><param name="module" value="applications"/></antcall>
        </target>

        <target id="dist-test" name="dist-test">
            <antcall target="compile-module"><param name="module" value="test"/></antcall>
        </target>

        <target id="dist-libio" name="dist-libio">
            <antcall target="compile-module"><param name="module" value="libio"/></antcall>
        </target>

        <target id="dist-qsar" name="dist-qsar">
            <antcall target="compile-module"><param name="module" value="qsar"/></antcall>
        </target>

        <target id="dist-builder3d" name="dist-builder3d">
            <antcall target="compile-module"><param name="module" value="builder3d"/></antcall>
        </target>

        <!-- target id="dist-large" name="dist-large" depends="compile-all, dist.init, libjars"
            description="Builds on big jar file for the CDK, including experimental classes.">
                <jar jarfile="${dist}/jar/cdk-${version}.jar">
                    <manifest>
                        <attribute name="Main-Class" value="org.openscience.cdk.applications.DistLargeInfo"/>
                        <section name="org.openscience.cdk">
                            <attribute name="Specification-Title" value="The Chemistry Development Kit"/>
                            <attribute name="Specification-Version" value="1.0"/>
                            <attribute name="Specification-Vendor" value="The CDK Project"/>
                            <attribute name="Implementation-Title" value="org.openscience.cdk"/>
                            <attribute name="Implementation-Version" value="${version}"/>
                            <attribute name="Implementation-Vendor" value="The CDK Project"/>
                        </section>
                    </manifest>
                    <fileset dir="${build}">
                        <include name="org/openscience/cdk/**" />
                        <excludesfile name="${src}/java1.4+.classes" if="isJava13"/>
                        <excludesfile name="${src}/java1.4.classes" unless="isJava14"/>
                        <excludesfile name="${src}/ant1.6.classes" unless="hasAnt16"/>
                    </fileset>
                    <fileset dir=".">
                        <include name="CHANGELOG" />
                        <include name="README" />
                        <include name="BUGS" />
                    </fileset>
                    <fileset dir="${doc}">
                        <include name="lgpl.license" />
                    </fileset>
                    <fileset dir="packages/tar/cdk">
                        <include name="AUTHORS" />
                    </fileset>
                    <fileset dir="${src}"> <!- from io and qsar module ->
                        <include name="io-formats.set"/>
                        <include name="qsar-descriptors.set"/>
                    </fileset>
                    <fileset dir="data/templates"> <!- from builder3d module ->
                        <include name="ringTemplateFingerprints.txt"/>
                        <include name="ringTemplateStructures.sdf"/>
                    </fileset>
                    <fileset dir="${appjars.dir}" includes="**/*.class"/>
                </jar>
        </target -->

        <target name="check.libjars" id="check.libjars">
            <uptodate property="libjars.uptodate" targetfile="${appjars.dir}">
                <srcfiles dir="${lib}" includes="base_1.4.jar"/>
                <srcfiles dir="${lib}" includes="batik-dom.jar"/>
                <srcfiles dir="${lib}" includes="batik-awt-util.jar"/>
                <srcfiles dir="${lib}" includes="batik-svggen.jar"/>
                <srcfiles dir="${lib}" includes="batik-util.jar"/>
                <srcfiles dir="${lib}" includes="batik-xml.jar"/>
                <srcfiles dir="${lib}" includes="castor-0.9.5-xml.jar"/>
                <srcfiles dir="${lib}" includes="cmlAll_1.4.jar"/>
                <srcfiles dir="${lib}" includes="commons-cli-1.0.jar"/>
                <srcfiles dir="${lib}" includes="dadml.jar"/>
                <srcfiles dir="${lib}" includes="euclid_1.4.jar"/>
                <srcfiles dir="${lib}" includes="gnujaxp.jar"/>
                <srcfiles dir="${lib}" includes="Jama-1.0.1.jar"/>
                <srcfiles dir="${lib}" includes="jgrapht-0.5.3.jar"/>
                <srcfiles dir="${lib}" includes="jmolApis.jar"/>
                <srcfiles dir="${lib}" includes="jmolIO.jar"/>
                <srcfiles dir="${lib}" includes="log4j.jar"/>
                <srcfiles dir="${lib}" includes="mysql-2.0.4.jar"/>
                <srcfiles dir="${lib}" includes="pmrdom_1.4.jar"/>
                <srcfiles dir="${lib}" includes="postgresql7.0-1.2.jar"/>
                <srcfiles dir="${lib}" includes="printf.jar"/>
                <srcfiles dir="${lib}" includes="stmml.jar"/>
                <srcfiles dir="${lib}" includes="vecmath1.2-1.14.jar"/>
                <srcfiles dir="${lib}" includes="xindice.jar"/>
                <srcfiles dir="${lib}" includes="xmldb.jar"/>
            </uptodate>
        </target>
        
        <target name="libjars" id="libjars" depends="check.libjars" unless="libjars.uptodate">
            <mkdir dir="${appjars.dir}"/>
            <unjar dest="${appjars.dir}" src="${lib}/base_1.4.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/batik-dom.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/batik-awt-util.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/batik-svggen.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/batik-util.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/batik-xml.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/castor-0.9.5-xml.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/cmlAll_1.4.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/commons-cli-1.0.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/euclid_1.4.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/Jama-1.0.1.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/jgrapht-0.5.3.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/jmolApis.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/jmolIO.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/mysql-2.0.4.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/pmrdom_1.4.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/postgresql7.0-1.2.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/printf.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/stmml.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/vecmath1.2-1.14.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/xindice.jar"/>
            <unjar dest="${appjars.dir}" src="${lib}/xmldb.jar"/>
        </target>

        <target id="sourcedist" name="sourcedist" depends="init"
                description="Builds the source packages.">
                <property name="package" value="cdk-source-${version}"/>
                <property name="sourcedist.dir" value="${sourcedist}/${package}"/>
                <copy todir="${sourcedist.dir}/${src}">
                        <fileset dir="${src}" includes="*.javafiles" />
                        <fileset dir="${src}" includes="*.classes" />
                        <fileset dir="${src}" includes="**/*.java" />
                        <fileset dir="${src}" includes="**/*.jj" />
                        <fileset dir="${src}" includes="org/openscience/cdk/io/cml/data/**" />
                </copy>
                <copy todir="${sourcedist.dir}">
                        <fileset dir="." includes="build.props" />
                        <fileset dir="." includes="build.xml" />
                        <fileset dir="." includes="javadoc.xml" />
                        <fileset dir="." includes="README" />
                        <fileset dir="." includes="CHANGELOG" />
                </copy>
                <copy todir="${sourcedist.dir}/jar">
                        <fileset dir="jar">
                            <exclude name="libio/*.jar"/>
                            <exclude name="pmd-1.8.jar"/>
                            <exclude name="xalan-2.0.1.jar"/>
                            <exclude name="doccheck.jar"/>
                            <exclude name="dbdoclet*.*"/>
                        </fileset>
                </copy>
                <copy todir="${sourcedist.dir}/data">
                        <fileset dir="data" />
                </copy>
                <copy tofile="${sourcedist.dir}/doc/javadoc/source//MakeJavaFilesFilesDoclet.java"
                      file="doc/javadoc/source/MakeJavaFilesFilesDoclet.java"/>
                <copy todir="${sourcedist.dir}/${src}/org/openscience/cdk/config/data/">
                        <fileset dir="${src}/org/openscience/cdk/config/data/"
                                 includes="*" />
                </copy>
                <copy
                  file="${src}/org/openscience/cdk/iupac/generator/data/IUPACNames.properties"
                  tofile="${sourcedist.dir}/${src}/org/openscience/cdk/iupac/generator/data/IUPACNames.properties" />
                <copy
                  file="${src}/org/openscience/cdk/dict/data/chemical.xml"
                  tofile="${sourcedist.dir}/${src}/org/openscience/cdk/dict/data/chemical.xml" />
                <copy 
                  file="${src}/org/openscience/cdk/dict/data/elements.xml"
                  tofile="${sourcedist.dir}/${src}/org/openscience/cdk/dict/data/elements.xml" />
                <mkdir dir="${sourcedist.dir}/${src}/org/openscience/cdk/qsar/model/data/"/>
                <copy todir="${sourcedist.dir}/${src}/org/openscience/cdk/qsar/model/data/">
                    <fileset dir="${src}/org/openscience/cdk/qsar/model/data/" includes="*.R"/>
                </copy>
                <copy todir="${sourcedist.dir}/${src}/">
                    <fileset dir="${src}/" includes="*.manifest" />
                </copy>
                <mkdir dir="${sourcedist.dir}/doc/" />
                <copy todir="${sourcedist.dir}/doc/">
                    <fileset dir="doc/" includes="lgpl.license" />
                </copy>
                <mkdir dir="${sourcedist.dir}/doc/javadoc" />
                <copy todir="${sourcedist.dir}/doc/javadoc">
                    <fileset dir="doc/javadoc" includes="MakeJavaFilesFilesDoclet.class" />
                    <fileset dir="doc/javadoc" includes="MakeCDKSetFilesDoclet.class" />
                </copy>
                <tar tarfile="${package}.tar" basedir="${sourcedist}/" includes="${package}/**" />
                <gzip zipfile="${package}.tar.gz" src="cdk-source-${version}.tar" />
                <delete file="${package}.tar" />
                <zip zipfile="${package}.zip" basedir="${sourcedist}/" includes="${package}/**" />
        </target>

        <!-- target id="test-all" name="test-all" depends="test, test-experimental"/ -->
        
        <!-- target id="test-experimental" name="test-experimental" depends="dist-large, noJunit"
                description="Performs a full JUnit test for the CDK, including experimental classes.">
                <mkdir dir="${reports.tests}"/>
                <junit printsummary="yes" haltonfailure="yes" fork="yes">
                    <classpath>
                        <pathelement location="${dist}/jar/cdk-${version}.jar" />
                        <pathelement location="${dist}/jar/cdk-test.jar" />
                        <fileset dir="${lib}">
                                <include name="*.jar" />
                        </fileset>
                        <fileset dir="${devellib}">
                                <include name="*.jar" />
                        </fileset>
                        <fileset dir="${lib}/libio">
                                <include name="*.jar" />
                        </fileset>
                    </classpath>
                    <test name="org.openscience.cdk.test.ExperimentalClassesTests"
                        haltonfailure="no"
                        todir="${reports.tests}"
                        outfile="result.experimental">
                                <formatter type="brief" />
                        </test>
                </junit>
        </target -->

        <target id="noJunit" name="noJunit" depends="check" unless="junit.present">
            <fail message="JUnit is not installed in Ant. Please copy cdk/develjar/junit.jar to ${ant.home}/lib/."/>
        </target>
        
        <!-- target id="test" name="test" depends="dist-test, dist-large, noJunit"
                description="Performs a full JUnit test for the CDK." if="junit.present">
                <mkdir dir="${reports.tests}"/>
                <junit printsummary="yes" haltonfailure="yes" fork="yes" maxmemory="256m">
                    <classpath>
                        <pathelement location="${dist}/jar/cdk-${version}.jar" />
                        <pathelement location="${dist}/jar/cdk-test.jar" />
                        <fileset dir="${lib}">
                                <include name="*.jar" />
                        </fileset>
                        <fileset dir="${devellib}">
                                <include name="*.jar" />
                        </fileset>
                        <fileset dir="${lib}/libio">
                                <include name="*.jar" />
                        </fileset>
                    </classpath>
                    <test name="org.openscience.cdk.test.CDKTests"
                        haltonfailure="no"
                        todir="${reports.tests}"
                        outfile="result">
                                <formatter type="brief" />
                        </test>
                </junit>
        </target -->

        <!-- target id="limitations" name="limitations" depends="dist-large, dist-test, noJunit"
                description="Performs a JUnit tests that indicate limitations of certain CDK algorithms/classes.">
                <junit printsummary="yes" haltonfailure="yes" fork="yes">
                    <classpath>
                        <pathelement location="${dist}/jar/cdk-${version}.jar" />
                        <fileset dir="${lib}">
                                <include name="*.jar" />
                        </fileset>
                        <fileset dir="${devellib}">
                                <include name="*.jar" />
                        </fileset>
                        <fileset dir="${lib}/libio">
                                <include name="*.jar" />
                        </fileset>
                    </classpath>
                        <test name="org.openscience.cdk.test.limitations.AlgorithmLimitations"
                        haltonfailure="no"
                        todir="${reports.tests}"
                        outfile="limitations">
                                <formatter type="brief" />
                        </test>
                </junit>
        </target -->

        <!-- target id="test-libio" name="test-libio" depends="dist-large, dist-libio">
                <java classname="org.openscience.cdk.test.libio.joelib.JOELibIOTest" fork="yes">
                        <classpath>
                                <pathelement location="${dist}/jar/cdk-${version}.jar" />
                                <pathelement path="${java.class.path}" />
                                <pathelement location="." />
                                <fileset dir="${devellib}">
                                        <include name="*.jar" />
                                </fileset>
                                <fileset dir="${lib}">
                                        <include name="*.jar" />
                                </fileset>
                                <fileset dir="${lib}/libio">
                                        <include name="*.jar" />
                                </fileset>
                        </classpath>
                </java>
        </target -->

        <!-- target name="run-with-java3d"
        depends="dist-extra, dist-io, dist-extra, dist-render-with-java3d">
                <java
                classname="org.openscience.cdk.test.OrbitalsRenderer3DTest"
                 fork="yes">
                        <arg value="data/reserpine.mol" />

                        <classpath>
                                <pathelement location="${dist}/jar/cdk-core.jar" />
                                <pathelement location="${dist}/jar/cdk-standard.jar" />
                                <pathelement location="${dist}/jar/cdk-extra.jar" />
                                <pathelement location="${dist}/jar/cdk-io.jar" />
                                <pathelement location="${dist}/jar/cdk-render.jar" />
                                <pathelement location="${dist}/jar/cdk-render-with-java3d.jar" />
                                <pathelement path="${java.class.path}" />
                                <pathelement location="." />
                                <fileset dir="${lib}">
                                        <include name="*.jar" />
                                </fileset>
                                <fileset dir="${pathto3djava}">
                                        <include name="*.jar" />
                                </fileset>
                        </classpath>
                </java>
        </target -->

        <!-- target id="run-test" name="run-test" depends="dist-large, dist-test" 
                description="Runs one specific JUnit test suite (org.openscience.cdk.test.&lt;class>) as a standalone application with -Dtestclass=&lt;class>.">
                <echo message="Running test class: testclass=${testclass}"/>
                <java classname="org.openscience.cdk.test.${testclass}" fork="yes">
                    <jvmarg value="-Dcdk.debugging=true"/>
                    <classpath>
                        <pathelement location="${dist}/jar/cdk-${version}.jar" />
                        <pathelement location="${dist}/jar/cdk-test.jar" />
                        <fileset dir="${lib}">
                                <include name="*.jar" />
                        </fileset>
                        <fileset dir="${devellib}">
                                <include name="*.jar" />
                        </fileset>
                        <fileset dir="${lib}/libio">
                                <include name="*.jar" />
                        </fileset>
                    </classpath>
                </java>
        </target -->

        <!-- target id="junit-test" name="junit-test" depends="dist-large, dist-test, noJunit" 
                description="Runs one specific JUnit test suite (org.openscience.cdk.test.&lt;class>) with -Dtestclass=&lt;class>.">
                <echo message="JUnit tests class: testclass=${testclass}"/>
                <junit printsummary="yes" haltonfailure="no" fork="yes">
                    <jvmarg value="-Dcdk.debugging=true"/>
                    <jvmarg value="-Dcdk.debug.stdout=true"/>
                    <classpath>
                        <pathelement location="${dist}/jar/cdk-${version}.jar" />
                        <pathelement location="${dist}/jar/cdk-test.jar" />
                        <pathelement path="${java.class.path}" />
                        <pathelement location="." />
                        <fileset dir="${lib}">
                                <include name="*.jar" />
                        </fileset>
                        <fileset dir="${devellib}">
                                <include name="*.jar" />
                        </fileset>
                        <fileset dir="${lib}/libio">
                                <include name="*.jar" />
                        </fileset>
                    </classpath>
                    <test name="org.openscience.cdk.test.${testclass}"
                        haltonfailure="no"
                        todir="${reports.tests}"
                        outfile="result.${testclass}">
                        <formatter type="brief" />
                    </test>
                </junit>
        </target -->

	
        <target id="run" name="run" depends="dist-all" 
                description="Runs an application (org.openscience.cdk.&lt;class>) with -Drunclass=&lt;class>.">
                <java classname="org.openscience.cdk.${runclass}" fork="yes" >
                   <arg value="${arg1}" />
                   <arg value="${arg2}" />
                   <arg value="${arg3}" />
                   <arg value="${arg4}" />
                   <classpath>
                        <pathelement location="${dist}/jar/cdk-core.jar" />
                        <pathelement location="${dist}/jar/cdk-standard.jar" />
                        <pathelement location="${dist}/jar/cdk-io.jar" />
                        <pathelement location="${dist}/jar/cdk-render.jar" />
                        <pathelement location="${dist}/jar/cdk-extra.jar" />
                        <pathelement location="${dist}/jar/cdk-apps.jar" />
                        <pathelement location="${dist}/jar/cdk-test.jar" />
                        <pathelement location="${dist}/jar/cdk-libio.jar" />
                        <pathelement location="${dist}/jar/cdk-data.jar" />
                        <pathelement path="${java.class.path}" />
                        <pathelement location="." />
                        <fileset dir="${lib}">
                                <include name="*.jar" />
                        </fileset>
                        <fileset dir="${lib}/libio">
                                <include name="*.jar" />
                        </fileset>
                    </classpath>
                </java>
        </target>

</project>
