<project name="CDK" default="dist" basedir=".">

        <!-- compile options -->
        <property name="build.sysclasspath" value="ignore" />
        <property name="build.compiler" value="modern" />
        <property name="debug" value="on" />
        <property name="deprecation" value="on" />
        <property name="optimization" value="off" />

        <!-- patches to apply -->
        <property name="do.patch.rfc20" value="yes" />

        <!-- where to find Java3D -->
        <property name="pathtojava3d" value="" />
        <property name="pathtojoelib" value="../../JoeLib/joelib/" />

        <!-- directories -->
        <property name="build" value="build" />
        <property name="sourcedist" value="sourcedist" />
        <property name="dist" value="dist" />
        <property name="doc" value="doc" />
        <property name="src" value="src" />
        <property name="lib" value="jar" />
        <property name="src.tests" value="${src}/org/openscience/cdk/test" />
        <property name="reports.tests" value="reports" />
 
        <!-- class to run for testing-->
        <property name="testclass" value="CDKTests" />
        <property name="runclass" value="applications.Viewer" />
        <property name="arg1" value="" />
        <property name="arg2" value="" />
        <property name="arg3" value="" />
        <property name="arg4" value="" />
        
        <!-- CLASSPATH -->
        <path id="project.class.path">
                <pathelement location="${java.ext.dirs}/rt.jar" />

                <fileset dir="${lib}">
                        <include name="batik-awt-util.jar" />
                        <include name="batik-dom.jar" />
                        <include name="batik-svggen.jar" />
                        <include name="batik-util.jar" />
                        <include name="batik-xml.jar" />
                        <include name="baysmith-io.jar" />
                        <include name="dadml.jar" />
                        <include name="gnujaxp.jar" />
                        <include name="junit.jar" />
                        <include name="log4j-core.jar" />
                        <include name="log4j.jar" />
                        <include name="mysql-2.0.4.jar" />
                        <include name="postgresql7.0-1.2.jar" />
                        <include name="printf.jar" />
                        <include name="vecmath1.2-1.14.jar" />
                        <include name="xerces-2.5.0.jar" />
                        <include name="xindice.jar" />
                        <include name="xmldb.jar" />
                        <include name="stmml.jar" />
                        <include name="castor-0.9.5-xml.jar" />
                </fileset>
                <fileset dir="${pathtojava3d}">
                        <include name="*.jar" />
                </fileset>
        </path>

        <target id="info" name="info" depends="check"> 
            <!-- Gives information about the building process. -->
            <echo message="Environment:" />
            <echo message="   Ant version: ${ant.version}" />
            <echo message="   ${ANT_HOME}: ${ant.home}" />
            <echo message="  Java version: ${java.version}" />
            <echo message="  Java ext dir: ${java.ext.dirs}" />
            <echo message="  JOELib found: ${joelib.present}" />
            <echo message="  CMLDOM found: ${cmllibs.present}" />
            <echo message="  Java3D found: ${java3D.present}" />
            <echo message="   Junit found: ${junit.present}" />
            <echo message="" />
            <echo message="Compiling:" />
            <echo message="           for: ${build.compiler}" />
            <echo message="         debug: ${debug}" />
            <echo message="   deprecation: ${deprecation}" />
            <echo message="  optimization: ${optimization}" />
            <echo message="" />
            <echo message="Patches to apply" />
        </target>

        <target id="check" name="check">
            <!-- Checks which parts of CDK can be build. -->
          <available classname="joelib.molecule.JOEAtom" 
                     classpath="${lib}/libio/joelib.jar" 
                     property="joelib.present"/>
          <available file="${lib}/cmlAll.jar" 
                     property="cmllibs.present"/>
          <available classname="javax.media.j3d.Canvas3D"
                     classpathref="project.class.path"
                     property="java3D.present"/>
          <available classname="junit.framework.TestCase"
                     classpath="${ant.home}/lib/junit.jar"
                     property="junit.present"/>
          <condition property="hasAnt16">
            <contains string="${ant.version}" substring="1.6"/>
          </condition>
          <condition property="isJava13">
            <contains string="${java.version}" substring="1.3"/>
          </condition>
          <uptodate property="dotjavafiles.uptodate"
              targetfile="${src}/core.javafiles">
              <srcfiles dir="${src}" includes="**/*.java" />
          </uptodate>
          <uptodate property="dotjjfiles.uptodate" 
              targetfile="${src}/org/openscience/cdk/iupac/parser/NomParser.java">
              <srcfiles dir="${src}" includes="org/openscience/cdk/iupac/parser/NomParser.jj" />
          </uptodate>
        </target>

        <target id="init" name="init" depends="check, setupBuildDir"/>
        <target id="customize" name="customize" depends="javacc"/>
        
        <target id="setupBuildDir" name="setupBuildDir">
                <tstamp />
                <mkdir dir="${build}" />
                <mkdir dir="${sourcedist}" />
                <mkdir dir="${dist}" />
                <mkdir dir="${reports.tests}" />
        </target>

        <target id="clean" name="clean" description="Removes autogenerated files.">
                <delete>
                    <fileset dir="." includes="**/*~" />
                    <fileset dir="." includes="*.tar.gz" />
                    <fileset dir="." includes="*.zip" />
                    <fileset dir="${src}" includes="*.classes" />
                    <fileset dir="${src}" includes="*.javafiles">
                        <exclude name="jmol*.javafiles" />
                    </fileset>
                </delete>

                <delete dir="${build}" />
                <delete dir="${sourcedist}" />
                <delete dir="${dist}" />
                <delete dir="${reports.tests}" />
        </target>

        <target name="compileDoclet" id="compileDoclet">
            <javac srcdir="doc/javadoc/source" destdir="doc/javadoc" 
                   includes="MakeJavaFilesFilesDoclet.java">
                <classpath>
                    <fileset dir="${java.ext.dirs}">
                        <include name="tools.jar" />
                    </fileset>
                    <fileset dir="${java.ext.dirs}/../../../lib">
                        <include name="tools.jar" />
                    </fileset>
                </classpath>
            </javac>
        </target>

        <target name="runDoclet" id="runDoclet" depends="compileDoclet" 
                unless="dotjavafiles.uptodate">
            <javadoc private="false" public="true">
                <classpath refid="project.class.path" />
                <doclet name="MakeJavaFilesFilesDoclet" path="${doc}/javadoc"/>

                <packageset dir="${src}">
                    <include name="org/openscience/cdk/**"/>
                </packageset>
            </javadoc>
            <move todir="${src}" failonerror="true">
                <fileset dir=".">
                  <include name="*.javafiles"/>
                  <include name="*.classes"/>
                </fileset>
            </move>
        </target>
        
        <target name="compile.init" id="compile.init" 
                depends="init, customize, compileDoclet, runDoclet"/>
        
        <target id="compile" name="compile" 
            description="Compiles the CDK."
            depends="compile-core, compile-standard, compile-extra, compile-io, 
                     compile-render, compile-render-with-java3d, compile-libio">
        </target>

        <target id="compile-all" name="compile-all" depends="compile, compile-experimental, compile-apps"
            description="Compiles the CDK, including experimental classes.">
        </target>

        <target id="compile-libio" name="compile-libio" depends="dist-standard,
                                         compile-libio-joelib, compile-libio-cml" />
        
        <target name="dont-compile-libio-joelib" unless="joelib.present">
            <echo message="Not compiling libio for JOELib, jar/libio/joelib.jar is not present" /> 
        </target>
        
        <target name="dont-compile-libio-cml" unless="cmllibs.present">
            <echo message="Not compiling libio for CMLDOM, jar/cmlAll.jar is not present" /> 
        </target>
        
        <target name="compile-libio-joelib" if="joelib.present" depends="dont-compile-libio-joelib">
            <!-- Task to build the libio classes for JOELib. -->
            <echo message="Compiling libio for JOELib" /> 

            <javac destdir="${build}" optimize="${optimization}" 
                   debug="${debug}" deprecation="${deprecation}">
                <src path="${src}/org/openscience/cdk/libio/joelib" />
                <src path="${src}/org/openscience/cdk/test/libio/joelib" />
                
                <classpath refid="project.class.path" />
                <classpath>
                    <fileset dir="${lib}/libio">
                        <include name="*.jar" />
                    </fileset>
                </classpath>
            </javac>
        </target>

        <target name="compile-libio-cml" if="cmllibs.present" depends="dont-compile-libio-cml">
            <!-- Task to build the libio classes for CMLDOM. -->
            <echo message="Compiling libio for CMLDOM" /> 

            <javac destdir="${build}" optimize="${optimization}" 
                   debug="${debug}" deprecation="${deprecation}">
                <src path="${src}/org/openscience/cdk/libio/cml" />
                
                <classpath refid="project.class.path" />
                <classpath>
                    <fileset dir="${lib}">
                        <include name="base.jar" />
                        <include name="cmlAll.jar" />
                        <include name="pmrlib.jar" />
                    </fileset>
                </classpath>
            </javac>
        </target>

        <target id="compile-apps" name="compile-apps" 
                depends="dist-libio, dist-experimental, dist-render-with-java3d">
            <!-- Task to build the applications classes. Some require extra
                 jars, like those in ${lib}/libio -->
            <echo message="Compiling classes defined in ${src}/applications.javafiles." />

            <javac srcdir="${src}" destdir="${build}" optimize="${optimization}" 
                   debug="${debug}" deprecation="${deprecation}">
                <includesfile name="${src}/applications.javafiles"/>
                <excludesfile name="${src}/java1.4.javafiles" if="isJava13"/>
                <classpath refid="project.class.path" />
                <classpath>
                    <fileset dir="${dist}/jar">
                        <include name="cdk-core.jar" />
                        <include name="cdk-standard.jar" />
                        <include name="cdk-render.jar" />
                        <include name="cdk-io.jar" />
                        <include name="cdk-extra.jar" />
                        <include name="cdk-libio.jar" />
                        <include name="cdk-experimental.jar" />
                    </fileset>
                </classpath>
                <classpath>
                    <fileset dir="${lib}/libio">
                        <include name="*.jar" />
                    </fileset>
                </classpath>
            </javac>
        </target>

        <target id="compile-core" name="compile-core" depends="compile.init">
                <echo message="Compiling classes for cdk-core module." />

                <javac srcdir="${src}" destdir="${build}" optimize="${optimization}" 
                       debug="${debug}" deprecation="${deprecation}"
                       includesfile="${src}/core.javafiles">
                    <classpath refid="project.class.path" />
                </javac>
        </target>

        <target id="compile-standard" name="compile-standard" depends="dist-core">
                <echo message="Compiling classes for cdk-standard module." />

                <javac srcdir="${src}" destdir="${build}" optimize="${optimization}" 
                       debug="${debug}" deprecation="${deprecation}">
                <includesfile name="${src}/standard.javafiles"/>
                <excludesfile name="${src}/java1.4.javafiles" if="isJava13"/>
                    <classpath>
                        <fileset dir="${lib}">
                            <include name="vecmath1.2-1.14.jar" />
                            <include name="log4j-core.jar" />
                            <include name="log4j.jar" />
                            <include name="gnujaxp.jar" />
                            <include name="xerces-2.5.0.jar" />
                        </fileset>
                        <fileset dir="${dist}/jar">
                            <include name="cdk-core.jar" />
                        </fileset>
                    </classpath>
                </javac>
        </target>

        <target id="compile-io" name="compile-io" depends="init, dist-core, dist-standard">
                <echo message="Compiling classes for cdk-io module." />

                <javac srcdir="${src}" destdir="${build}" optimize="${optimization}" 
                       debug="${debug}" deprecation="${deprecation}">
                <includesfile name="${src}/io.javafiles"/>
                <excludesfile name="${src}/java1.4.javafiles" if="isJava13"/>
                    <classpath refid="project.class.path" />
                    <classpath>
                        <fileset dir="${dist}/jar">
                            <include name="cdk-core.jar" />
                            <include name="cdk-standard.jar" />
                        </fileset>
                    </classpath>
                </javac>
        </target>

        <target id="compile-render" name="compile-render" depends="init, dist-core, dist-standard">
                <echo message="Compiling classes for cdk-render module." />

                <javac srcdir="${src}" destdir="${build}" optimize="${optimization}" 
                       debug="${debug}" deprecation="${deprecation}"
                       includesfile="${src}/render.javafiles">

                    <classpath refid="project.class.path" />
                    <classpath>
                        <fileset dir="${dist}/jar">
                            <include name="cdk-core.jar" />
                            <include name="cdk-standard.jar" />
                        </fileset>
                    </classpath>
                </javac>
        </target>
        
	      <!-- Convert the JavaCC .jj file to the correct .java files for the IUPAC parser -->
        <target id="javacc" name="javacc" depends="init, check" if="hasAnt16" unless="dotjjfiles.uptodate">
          <delete>
              <fileset id="javacc-generated" 
              dir="${src}/org/openscience/cdk/iupac/parser/" 
              includes="NomParser*.java,ParseException.java,SimpleCharStream.java,Token.java,TokenMgrError.java"/>
          </delete>
          <javacc target="${src}/org/openscience/cdk/iupac/parser/NomParser.jj" 
            outputdirectory="${src}/org/openscience/cdk/iupac/parser/" 
            javacchome="${lib}"/>
        </target>

        <target id="compile-extra" name="compile-extra" depends="dist-standard, dist-io, dist-render">
            <javac srcdir="${src}" destdir="${build}" optimize="${optimization}" 
                   debug="${debug}" deprecation="${deprecation}">
                <includesfile name="${src}/extra.javafiles"/>
                <excludesfile name="${src}/java1.4.javafiles" if="isJava13"/>
                <excludesfile name="${src}/ant1.6.javafiles" unless="hasAnt16"/>

                <classpath refid="project.class.path" />
                <classpath>
                    <fileset dir="${dist}/jar">
                        <include name="cdk-core.jar" />
                        <include name="cdk-standard.jar" />
                        <include name="cdk-render.jar" />
                        <include name="cdk-io.jar" />
                    </fileset>
                </classpath>
            </javac>
        </target>

        <target id="compile-experimental" name="compile-experimental" 
                depends="dist-extra">
            <echo message="Compiling classes for cdk-experimental module." />

            <javac srcdir="${src}" destdir="${build}" optimize="${optimization}" 
                   debug="${debug}" deprecation="${deprecation}"
                   includesfile="${src}/experimental.javafiles">
                <classpath refid="project.class.path" />
                <classpath>
                    <fileset dir="${dist}/jar">
                        <include name="cdk-core.jar" />
                        <include name="cdk-standard.jar" />
                        <include name="cdk-render.jar" />
                        <include name="cdk-io.jar" />
                        <include name="cdk-extra.jar" />
                    </fileset>
                </classpath>
            </javac>
        </target>

        <target id="compile-test" name="compile-test" 
                depends="dist-all">
            <!-- Task to build the test classes. -->
            <javac srcdir="${src}"
                   destdir="${build}" optimize="${optimization}" 
                   debug="${debug}" deprecation="${deprecation}">
                <includesfile name="${src}/test.javafiles"/>
                <excludesfile name="${src}/java1.4.javafiles" if="isJava13"/>
                <excludesfile name="${src}/ant1.6.javafiles" unless="hasAnt16"/>

                <classpath refid="project.class.path" />
                <classpath>
                    <fileset dir="${dist}/jar">
                        <include name="cdk-core.jar" />
                        <include name="cdk-standard.jar" />
                        <include name="cdk-render.jar" />
                        <include name="cdk-io.jar" />
                        <include name="cdk-extra.jar" />
                        <include name="cdk-libio.jar" />
                        <include name="cdk-experimental.jar" />
                        <include name="cdk-apps.jar" />
                    </fileset>
                </classpath>
            </javac>
        </target>

        
        <target name="compile-render-with-java3d" 
                depends="dont-compile-render-with-java3d, do-compile-render-with-java3d"/>

        <target name="dont-compile-render-with-java3d" depends="compile-render"
                unless="java3D.present">
                <echo message="Cannot compile Java3D based viewer classes. Java3D is not present" />
        </target>
        
        <target name="do-compile-render-with-java3d" depends="compile-render"
                if="java3D.present">
                <mkdir dir="${build}" />

                <javac srcdir="${src}"
                       destdir="${build}" optimize="${optimization}" 
                       debug="${debug}" deprecation="${deprecation}"
                       includesfile="${src}/java3d.javafiles">

                        <classpath refid="project.class.path" />
                </javac>
        </target>

        <target id="dist.init" name="dist.init">
                <mkdir dir="${dist}/jar" />

                <!-- copy data files -->

                <mkdir dir="${build}/org/openscience/cdk/config" />
                <mkdir dir="${build}/org/openscience/cdk/io/cml/data" />
                <mkdir dir="${build}/org/openscience/cdk/dict/data" />
                <mkdir dir="${build}/org/openscience/cdk/iupac/generator/data" />

                <copy
                file="${src}/org/openscience/cdk/config/isotopes.xml"
                tofile="${build}/org/openscience/cdk/config/isotopes.xml" />
                <copy
                file="${src}/org/openscience/cdk/config/structgen_atomtypes.xml"
                tofile="${build}/org/openscience/cdk/config/structgen_atomtypes.xml" />
                <copy
                file="${src}/org/openscience/cdk/config/valency_atomtypes.xml"
                tofile="${build}/org/openscience/cdk/config/valency_atomtypes.xml" />
                <copy
                file="${src}/org/openscience/cdk/config/jmol_atomtypes.txt"
                tofile="${build}/org/openscience/cdk/config/jmol_atomtypes.txt" />
                <copy
                file="${src}/org/openscience/cdk/config/mol2_atomtypes.txt"
                tofile="${build}/org/openscience/cdk/config/mol2_atomtypes.txt" />
                <copy
                file="${src}/org/openscience/cdk/config/log4j.properties"
                tofile="${build}/org/openscience/cdk/config/log4j.properties" />

                <copy
                file="${src}/org/openscience/cdk/io/cml/data/cml1_0.dtd"
                tofile="${build}/org/openscience/cdk/io/cml/data/cml1_0.dtd" />
                <copy
                file="${src}/org/openscience/cdk/io/cml/data/cml1_0_1.dtd"
                tofile="${build}/org/openscience/cdk/io/cml/data/cml1_0_1.dtd" />

                <copy
                file="${src}/org/openscience/cdk/iupac/generator/data/IUPACNames.properties"
                tofile="${build}/org/openscience/cdk/iupac/generator/data/IUPACNames.properties" />

                <copy
                file="${src}/org/openscience/cdk/dict/data/chemical.xml"
                tofile="${build}/org/openscience/cdk/dict/data/chemical.xml" />
                <copy 
                file="${src}/org/openscience/cdk/dict/data/elements.xml"
                tofile="${build}/org/openscience/cdk/dict/data/elements.xml" />
        </target>

        <target id="dist-core" name="dist-core" depends="compile-core, dist.init">
                <jar jarfile="${dist}/jar/cdk-core.jar">
                    <fileset dir="${build}">
                        <includesfile name="${src}/core.classes" />
                   </fileset>
                </jar>
        </target>

        <target id="dist-extra" name="dist-extra" depends="dist-core, compile-extra">
                <jar jarfile="${dist}/jar/cdk-extra.jar">
                    <fileset dir="${build}">
                        <includesfile name="${src}/extra.classes" />
                    </fileset>
                    <fileset dir="${build}">
                        <include name="org/openscience/cdk/dict/data/*.xml" />
                    </fileset>
                </jar>
        </target>

        <target id="dist-experimental" name="dist-experimental" depends="compile-experimental, dist.init">
                <jar jarfile="${dist}/jar/cdk-experimental.jar">
                    <fileset dir="${build}">
                        <includesfile name="${src}/experimental.classes" />
                    </fileset>
                </jar>
        </target>

        <target id="dist-apps" name="dist-apps" depends="compile-apps">
                <jar jarfile="${dist}/jar/cdk-apps.jar" manifest="${src}/cdk-apps.manifest">
                    <fileset dir="${build}">
                        <includesfile name="${src}/applications.classes" />
                    </fileset>
                </jar>
        </target>

        <target id="dist-test" name="dist-test" depends="compile-test">
                <jar jarfile="${dist}/jar/cdk-test.jar">
                    <fileset dir="${build}">
                        <includesfile name="${src}/test.classes" />
                    </fileset>
                    <fileset dir=".">
                        <include name="data/**" />
                    </fileset>
                </jar>
        </target>

        <target id="dist-libio" name="dist-libio" depends="compile-libio" unless="libio.present">
                <jar jarfile="${dist}/jar/cdk-libio.jar">
                    <fileset dir="${build}">
                        <includesfile name="${src}/libio.classes" />
                    </fileset>
                    <fileset dir="${build}">
                        <include name="org/openscience/jmol/**" />
                    </fileset>
                </jar>
        </target>

        <target id="dist-io" name="dist-io" depends="compile-io">
                <jar jarfile="${dist}/jar/cdk-io.jar">
                    <fileset dir="${build}">
                        <includesfile name="${src}/io.classes" />
                        <include name="org/openscience/cdk/io/cml/data/**" />
                    </fileset>
                </jar>
        </target>

        <target id="dist-render" name="dist-render" depends="compile-render">
                <jar jarfile="${dist}/jar/cdk-render.jar">
                    <fileset dir="${build}">
                        <includesfile name="${src}/render.classes" />
                    </fileset>
                </jar>
        </target>

        <target id="dist-render-with-java3d" name="dist-render-with-java3d" depends="compile-render-with-java3d"
                if="java3D.present">
                <jar jarfile="${dist}/jar/cdk-render.jar">
                    <fileset dir="${build}">
                        <includesfile name="${src}/render.classes" />
                        <includesfile name="${src}/java3d.classes" />
                    </fileset>
                </jar>
        </target>

        <target id="dist-standard" name="dist-standard" depends="compile-standard, dist.init">
                <jar jarfile="${dist}/jar/cdk-standard.jar">
                    <fileset dir="${build}">
                        <includesfile name="${src}/standard.classes" />
                        <include name="org/openscience/cdk/config/**" />
                    </fileset>
                </jar>
        </target>

        <target id="dist-large" name="dist-large" depends="compile-all, dist.init"
            description="Builds on big jar file for the CDK, including experimental classes.">
                <jar jarfile="${dist}/jar/cdk-all.jar">
                    <fileset dir="${build}">
                        <include name="org/openscience/cdk/**" />
                    </fileset>
                    <fileset dir=".">
                        <include name="CHANGELOG" />
                        <include name="README" />
                        <include name="BUGS" />
                    </fileset>
                    <fileset dir="${doc}">
                        <include name="lgpl.license" />
                    </fileset>
                    <fileset dir="packages/tar/cdk">
                        <include name="AUTHORS" />
                    </fileset>
                </jar>
        </target>

        <target id="dist-all" name="dist-all" depends="dist, dist-experimental, dist-apps"
                description="Builds the jar files for the CDK, including experimental classes."/>

        <target id="dist" name="dist" depends="dist-core, dist-standard, 
                                         dist-io, dist-render,
                                         dist-extra, dist-libio,
                                         dist-render-with-java3d" 
                description="Builds the jar files for the CDK."/>

        <target id="sourcedist" name="sourcedist" depends="init"
                description="Builds the source packages.">
                <property name="package" value="cdk-source-${DSTAMP}"/>
                <property name="sourcedist.dir" value="${sourcedist}/${package}"/>
                <copy todir="${sourcedist.dir}/${src}">
                        <fileset dir="${src}" includes="*.javafiles" />
                        <fileset dir="${src}" includes="**/*.java" />
                        <fileset dir="${src}" includes="**/*.jj" />
                        <fileset dir="${src}" includes="org/openscience/cdk/io/cml/data/**" />
                </copy>
                <copy todir="${sourcedist.dir}">
                        <fileset dir="." includes="build.xml" />
                        <fileset dir="." includes="javadoc.xml" />
                        <fileset dir="." includes="README" />
                        <fileset dir="." includes="CHANGELOG" />
                </copy>
                <copy todir="${sourcedist.dir}/jar">
                        <fileset dir="jar" />
                </copy>
                <copy todir="${sourcedist.dir}/data">
                        <fileset dir="data" />
                </copy>
                <copy tofile="${sourcedist.dir}/doc/javadoc/source//MakeJavaFilesFilesDoclet.java"
                      file="doc/javadoc/source/MakeJavaFilesFilesDoclet.java"/>
                <copy todir="${sourcedist.dir}/${src}/org/openscience/cdk/config/">
                        <fileset dir="${src}/org/openscience/cdk/config/"
                                 includes="*" />
                </copy>
                <copy
                  file="${src}/org/openscience/cdk/iupac/generator/data/IUPACNames.properties"
                  tofile="${sourcedist.dir}/${src}/org/openscience/cdk/iupac/generator/data/IUPACNames.properties" />
                <copy
                  file="${src}/org/openscience/cdk/dict/data/chemical.xml"
                  tofile="${sourcedist.dir}/${src}/org/openscience/cdk/dict/data/chemical.xml" />
                <copy 
                  file="${src}/org/openscience/cdk/dict/data/elements.xml"
                  tofile="${sourcedist.dir}/${src}/org/openscience/cdk/dict/data/elements.xml" />
                <copy todir="${sourcedist.dir}/${src}/patches/">
                    <fileset dir="${src}/patches/" includes="*" />
                </copy>
                <copy todir="${sourcedist.dir}/${src}/">
                    <fileset dir="${src}/" includes="*.manifest" />
                </copy>
                <mkdir dir="${sourcedist.dir}/doc/" />
                <copy todir="${sourcedist.dir}/doc/">
                    <fileset dir="doc/" includes="lgpl.license" />
                </copy>
                <tar tarfile="${package}.tar" basedir="${sourcedist}/" includes="${package}/**" />
                <gzip zipfile="${package}.tar.gz" src="cdk-source-${DSTAMP}.tar" />
                <delete file="${package}.tar" />
                <zip zipfile="${package}.zip" basedir="${sourcedist}/" includes="${package}/**" />
        </target>

	<target name="test-core" depends="dist-core, dist-test, noJunit">
            <junit printsummary="yes" haltonfailure="yes" fork="yes">
                <classpath refid="project.class.path" />
                <classpath>
                    <fileset dir="${dist}/jar">
                        <include name="cdk-core.jar" />
                        <include name="cdk-test.jar" />
                    </fileset>
                </classpath>

                <test name="org.openscience.cdk.test.CoreClassesTests"
                      haltonfailure="no" todir="${reports.tests}"
                      outfile="result.core">
                    <formatter type="brief" />
                </test>
            </junit>
        </target>
	
	<target name="test-standard" depends="dist-core, dist-standard, dist-test, noJunit">
            <junit printsummary="yes" haltonfailure="yes" fork="yes">
                <classpath refid="project.class.path" />
                <classpath>
                    <fileset dir="${dist}/jar">
                        <include name="cdk-core.jar" />
                        <include name="cdk-standard.jar" />
                        <include name="cdk-test.jar" />
                    </fileset>
                </classpath>

                <test name="org.openscience.cdk.test.StandardClassesTests"
                      haltonfailure="no" todir="${reports.tests}"
                      outfile="result.standard">
                    <formatter type="brief" />
                </test>
            </junit>
        </target>
	
        <target name="test-io" depends="dist-core, dist-standard, dist-test, dist-io, noJunit">
            <junit printsummary="yes" haltonfailure="yes" showoutput="yes" fork="yes">
                <classpath refid="project.class.path" />
                <classpath>
                    <fileset dir="${dist}/jar">
                        <include name="cdk-core.jar" />
                        <include name="cdk-standard.jar" />
                        <include name="cdk-io.jar" />
                        <include name="cdk-test.jar" />
                    </fileset>
                </classpath>

                <test name="org.openscience.cdk.test.io.IOTests"
                      haltonfailure="no" todir="${reports.tests}"
                      outfile="result.io">
                    <formatter type="brief" />
                </test>
            </junit>
        </target>

        <target id="test-all" name="test-all" depends="test, noJunit"
                description="Performs a full JUnit test for the CDK, including experimental classes.">
                <junit printsummary="yes" haltonfailure="yes" fork="yes">
                    <classpath>
                        <pathelement location="${dist}/jar/cdk-core.jar" />
                        <pathelement location="${dist}/jar/cdk-standard.jar" />
                        <pathelement location="${dist}/jar/cdk-io.jar" />
                        <pathelement location="${dist}/jar/cdk-render.jar" />
                        <pathelement location="${dist}/jar/cdk-extra.jar" />
                        <pathelement location="${dist}/jar/cdk-apps.jar" />
                        <pathelement location="${dist}/jar/cdk-test.jar" />
                        <pathelement location="${dist}/jar/cdk-libio.jar" />
                        <pathelement location="${dist}/jar/cdk-experimental.jar" />
                        <fileset dir="${lib}">
                                <include name="*.jar" />
                        </fileset>
                        <fileset dir="${lib}/libio">
                                <include name="*.jar" />
                        </fileset>
                    </classpath>
                    <test name="org.openscience.cdk.test.ExperimentalClassesTests"
                        haltonfailure="no"
                        todir="${reports.tests}"
                        outfile="result.experimental">
                                <formatter type="brief" />
                        </test>
                </junit>
        </target>

        <target id="noJunit" name="noJunit" depends="check" unless="junit.present">
            <fail message="JUnit is not installed in Ant. Please copy cdk/jar/junit.jar to ${ant.home}/lib/."/>
        </target>
        
        <target id="test" name="test" depends="dist-test, noJunit"
                description="Performs a full JUnit test for the CDK." if="junit.present">
                <junit printsummary="yes" haltonfailure="yes" fork="yes">
                    <classpath>
                        <pathelement location="${dist}/jar/cdk-core.jar" />
                        <pathelement location="${dist}/jar/cdk-standard.jar" />
                        <pathelement location="${dist}/jar/cdk-io.jar" />
                        <pathelement location="${dist}/jar/cdk-render.jar" />
                        <pathelement location="${dist}/jar/cdk-extra.jar" />
                        <pathelement location="${dist}/jar/cdk-apps.jar" />
                        <pathelement location="${dist}/jar/cdk-test.jar" />
                        <pathelement location="${dist}/jar/cdk-libio.jar" />
                        <pathelement location="${dist}/jar/cdk-experimental.jar" />
                        <fileset dir="${lib}">
                                <include name="*.jar" />
                        </fileset>
                        <fileset dir="${lib}/libio">
                                <include name="*.jar" />
                        </fileset>
                    </classpath>
                    <test name="org.openscience.cdk.test.CDKTests"
                        haltonfailure="no"
                        todir="${reports.tests}"
                        outfile="result">
                                <formatter type="brief" />
                        </test>
                </junit>
        </target>

        <target id="limitations" name="limitations" depends="dist-test, noJunit"
                description="Performs a JUnit tests that indicate limitations of certain CDK algorithms/classes.">
                <junit printsummary="yes" haltonfailure="yes" fork="yes">
                    <classpath>
                        <pathelement location="${dist}/jar/cdk-core.jar" />
                        <pathelement location="${dist}/jar/cdk-standard.jar" />
                        <pathelement location="${dist}/jar/cdk-io.jar" />
                        <pathelement location="${dist}/jar/cdk-render.jar" />
                        <pathelement location="${dist}/jar/cdk-extra.jar" />
                        <pathelement location="${dist}/jar/cdk-apps.jar" />
                        <pathelement location="${dist}/jar/cdk-test.jar" />
                        <pathelement location="${dist}/jar/cdk-libio.jar" />
                        <fileset dir="${lib}">
                                <include name="*.jar" />
                        </fileset>
                        <fileset dir="${lib}/libio">
                                <include name="*.jar" />
                        </fileset>
                    </classpath>
                        <test name="org.openscience.cdk.test.limitations.AlgorithmLimitations"
                        haltonfailure="no"
                        todir="${reports.tests}"
                        outfile="limitations">
                                <formatter type="brief" />
                        </test>
                </junit>
        </target>

        <target name="test-libio" depends="dist-libio">
                <java classname="org.openscience.cdk.test.libio.joelib.JOELibIOTest" fork="yes">
                        <classpath>
                                <pathelement location="${dist}/jar/cdk-core.jar" />
                                <pathelement location="${dist}/jar/cdk-extra.jar" />
                                <pathelement location="${dist}/jar/cdk-libio.jar" />
                                <pathelement path="${java.class.path}" />
                                <pathelement location="." />
                                <fileset dir="${lib}">
                                        <include name="*.jar" />
                                </fileset>
                                <fileset dir="${lib}/libio">
                                        <include name="*.jar" />
                                </fileset>
                        </classpath>
                </java>
        </target>

        <target name="run-with-java3d"
        depends="dist-extra, dist-io, dist-extra, dist-render-with-java3d">
                <java
                classname="org.openscience.cdk.test.OrbitalsRenderer3DTest"
                 fork="yes">
                        <arg value="data/reserpine.mol" />

                        <classpath>
                                <pathelement location="${dist}/jar/cdk-core.jar" />
                                <pathelement location="${dist}/jar/cdk-standard.jar" />
                                <pathelement location="${dist}/jar/cdk-extra.jar" />
                                <pathelement location="${dist}/jar/cdk-io.jar" />
                                <pathelement location="${dist}/jar/cdk-render.jar" />
                                <pathelement location="${dist}/jar/cdk-render-with-java3d.jar" />
                                <pathelement path="${java.class.path}" />
                                <pathelement location="." />
                                <fileset dir="${lib}">
                                        <include name="*.jar" />
                                </fileset>
                                <fileset dir="${pathto3djava}">
                                        <include name="*.jar" />
                                </fileset>
                        </classpath>
                </java>
        </target>

        <target id="run-test" name="run-test" depends="dist-core, dist-extra, dist-test, dist-standard" 
                description="Runs one specific JUnit test suite (org.openscience.cdk.test.&lt;class>) as a standalone application with -Dtestclass=&lt;class>.">
                <echo message="Running test class: testclass=${testclass}"/>
                <java classname="org.openscience.cdk.test.${testclass}" fork="yes">
                    <jvmarg value="-Dcdk.debugging=true"/>
                    <classpath>
                        <pathelement location="${dist}/jar/cdk-core.jar" />
                        <pathelement location="${dist}/jar/cdk-standard.jar" />
                        <pathelement location="${dist}/jar/cdk-io.jar" />
                        <pathelement location="${dist}/jar/cdk-render.jar" />
                        <pathelement location="${dist}/jar/cdk-extra.jar" />
                        <pathelement location="${dist}/jar/cdk-apps.jar" />
                        <pathelement location="${dist}/jar/cdk-test.jar" />
                        <pathelement location="${dist}/jar/cdk-libio.jar" />
                        <fileset dir="${lib}">
                                <include name="*.jar" />
                        </fileset>
                        <fileset dir="${lib}/libio">
                                <include name="*.jar" />
                        </fileset>
                    </classpath>
                </java>
        </target>

        <target id="junit-test" name="junit-test" depends="dist-core, dist-extra, dist-test, dist-standard, noJunit" 
                description="Runs one specific JUnit test suite (org.openscience.cdk.test.&lt;class>) with -Dtestclass=&lt;class>.">
                <echo message="JUnit tests class: testclass=${testclass}"/>
                <junit printsummary="yes" haltonfailure="no" fork="yes">
                    <jvmarg value="-Dcdk.debugging=true"/>
                    <jvmarg value="-Dcdk.debug.stdout=true"/>
                    <classpath>
                        <pathelement location="${dist}/jar/cdk-core.jar" />
                        <pathelement location="${dist}/jar/cdk-standard.jar" />
                        <pathelement location="${dist}/jar/cdk-io.jar" />
                        <pathelement location="${dist}/jar/cdk-render.jar" />
                        <pathelement location="${dist}/jar/cdk-extra.jar" />
                        <pathelement location="${dist}/jar/cdk-apps.jar" />
                        <pathelement location="${dist}/jar/cdk-test.jar" />
                        <pathelement location="${dist}/jar/cdk-libio.jar" />
                        <pathelement location="${dist}/jar/cdk-experimental.jar" />
                        <pathelement path="${java.class.path}" />
                        <pathelement location="." />
                        <fileset dir="${lib}">
                                <include name="*.jar" />
                        </fileset>
                        <fileset dir="${lib}/libio">
                                <include name="*.jar" />
                        </fileset>
                    </classpath>
                    <test name="org.openscience.cdk.test.${testclass}"
                        haltonfailure="no"
                        todir="${reports.tests}"
                        outfile="result.${testclass}">
                        <formatter type="brief" />
                    </test>
                </junit>
        </target>

	
        <target id="run" name="run" depends="dist-core, dist-extra, dist-test, dist-standard" 
                description="Runs an application (org.openscience.cdk.&lt;class>) with -Drunclass=&lt;class>.">
                <java classname="org.openscience.cdk.${runclass}" fork="yes" >
		   <arg value="${arg1}" />
		   <arg value="${arg2}" />
		   <arg value="${arg3}" />
		   <arg value="${arg4}" />
                   <classpath>
                        <pathelement location="${dist}/jar/cdk-core.jar" />
                        <pathelement location="${dist}/jar/cdk-standard.jar" />
                        <pathelement location="${dist}/jar/cdk-io.jar" />
                        <pathelement location="${dist}/jar/cdk-render.jar" />
                        <pathelement location="${dist}/jar/cdk-extra.jar" />
                        <pathelement location="${dist}/jar/cdk-apps.jar" />
                        <pathelement location="${dist}/jar/cdk-test.jar" />
                        <pathelement location="${dist}/jar/cdk-libio.jar" />
                        <pathelement path="${java.class.path}" />
                        <pathelement location="." />
                        <fileset dir="${lib}">
                                <include name="*.jar" />
                        </fileset>
                        <fileset dir="${lib}/libio">
                                <include name="*.jar" />
                        </fileset>
                    </classpath>
                </java>
        </target>

</project>
